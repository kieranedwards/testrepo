//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace Exerp.Api.WebServices.PersonAPI {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PersonAPIBinding", Namespace="http://v4.api.eclub.procard.dk/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(extendedAttribute[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(friend[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(memberCard[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(subscription[]))]
    public partial class PersonAPIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback changePasswordWithTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePersonTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeSuspensionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDoctorNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createJournalNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createLeadOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPaymentAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPersonWithCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPersonWithPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback createToDoOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteExtendedAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback findPersonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCentersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCentersInAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCitiesForZipcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDetailForCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDetailForCentersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDetailForCentersInAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExtendedAttributeMIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback getExtendedAttributeTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJournalNoteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJournalNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPassportCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonDetailByLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getScopeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTypeAndStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback overridePartnerBenefitActivationAuthorizationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback removePersonReferrerOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendPasswordTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPersonReferrerOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferAnyPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateExtendedAttributeMIMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateExtendedAttributeTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateBankInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback validatePersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback validatePhoneNumberOperationCompleted;
        
        /// <remarks/>
        public PersonAPIService() {
            this.Url = "https://puregym-test.exerp.com/api-v4/PersonAPI";
        }
        
        /// <remarks/>
        public event changePasswordWithTokenCompletedEventHandler changePasswordWithTokenCompleted;
        
        /// <remarks/>
        public event changePersonTypeCompletedEventHandler changePersonTypeCompleted;
        
        /// <remarks/>
        public event changeSuspensionStatusCompletedEventHandler changeSuspensionStatusCompleted;
        
        /// <remarks/>
        public event createDoctorNoteCompletedEventHandler createDoctorNoteCompleted;
        
        /// <remarks/>
        public event createJournalNoteCompletedEventHandler createJournalNoteCompleted;
        
        /// <remarks/>
        public event createLeadCompletedEventHandler createLeadCompleted;
        
        /// <remarks/>
        public event createPaymentAgreementCompletedEventHandler createPaymentAgreementCompleted;
        
        /// <remarks/>
        public event createPersonCompletedEventHandler createPersonCompleted;
        
        /// <remarks/>
        public event createPersonWithCommunicationDetailsCompletedEventHandler createPersonWithCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event createPersonWithPasswordCompletedEventHandler createPersonWithPasswordCompleted;
        
        /// <remarks/>
        public event createToDoCompletedEventHandler createToDoCompleted;
        
        /// <remarks/>
        public event deleteExtendedAttributeCompletedEventHandler deleteExtendedAttributeCompleted;
        
        /// <remarks/>
        public event findPersonsCompletedEventHandler findPersonsCompleted;
        
        /// <remarks/>
        public event getCentersCompletedEventHandler getCentersCompleted;
        
        /// <remarks/>
        public event getCentersInAreaCompletedEventHandler getCentersInAreaCompleted;
        
        /// <remarks/>
        public event getCitiesForZipcodeCompletedEventHandler getCitiesForZipcodeCompleted;
        
        /// <remarks/>
        public event getCommunicationDetailsCompletedEventHandler getCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event getCurrentPersonIdCompletedEventHandler getCurrentPersonIdCompleted;
        
        /// <remarks/>
        public event getDetailForCenterCompletedEventHandler getDetailForCenterCompleted;
        
        /// <remarks/>
        public event getDetailForCentersCompletedEventHandler getDetailForCentersCompleted;
        
        /// <remarks/>
        public event getDetailForCentersInAreaCompletedEventHandler getDetailForCentersInAreaCompleted;
        
        /// <remarks/>
        public event getDetailsCompletedEventHandler getDetailsCompleted;
        
        /// <remarks/>
        public event getExtendedAttributeMIMECompletedEventHandler getExtendedAttributeMIMECompleted;
        
        /// <remarks/>
        public event getExtendedAttributeTextCompletedEventHandler getExtendedAttributeTextCompleted;
        
        /// <remarks/>
        public event getJournalNoteDocumentCompletedEventHandler getJournalNoteDocumentCompleted;
        
        /// <remarks/>
        public event getJournalNotesCompletedEventHandler getJournalNotesCompleted;
        
        /// <remarks/>
        public event getPassportCountriesCompletedEventHandler getPassportCountriesCompleted;
        
        /// <remarks/>
        public event getPersonDetailCompletedEventHandler getPersonDetailCompleted;
        
        /// <remarks/>
        public event getPersonDetailByLoginCompletedEventHandler getPersonDetailByLoginCompleted;
        
        /// <remarks/>
        public event getScopeCompletedEventHandler getScopeCompleted;
        
        /// <remarks/>
        public event getTypeAndStatusCompletedEventHandler getTypeAndStatusCompleted;
        
        /// <remarks/>
        public event overridePartnerBenefitActivationAuthorizationCodeCompletedEventHandler overridePartnerBenefitActivationAuthorizationCodeCompleted;
        
        /// <remarks/>
        public event removePersonReferrerCompletedEventHandler removePersonReferrerCompleted;
        
        /// <remarks/>
        public event sendPasswordCompletedEventHandler sendPasswordCompleted;
        
        /// <remarks/>
        public event sendPasswordTokenCompletedEventHandler sendPasswordTokenCompleted;
        
        /// <remarks/>
        public event setPersonReferrerCompletedEventHandler setPersonReferrerCompleted;
        
        /// <remarks/>
        public event transferAnyPersonCompletedEventHandler transferAnyPersonCompleted;
        
        /// <remarks/>
        public event transferPersonCompletedEventHandler transferPersonCompleted;
        
        /// <remarks/>
        public event updateCommunicationDetailsCompletedEventHandler updateCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event updateDetailsCompletedEventHandler updateDetailsCompleted;
        
        /// <remarks/>
        public event updateExtendedAttributeMIMECompletedEventHandler updateExtendedAttributeMIMECompleted;
        
        /// <remarks/>
        public event updateExtendedAttributeTextCompletedEventHandler updateExtendedAttributeTextCompleted;
        
        /// <remarks/>
        public event validateBankInfoCompletedEventHandler validateBankInfoCompleted;
        
        /// <remarks/>
        public event validatePersonCompletedEventHandler validatePersonCompleted;
        
        /// <remarks/>
        public event validatePhoneNumberCompletedEventHandler validatePhoneNumberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void changePasswordWithToken(personKey personKey, string newPassword, string token) {
            this.Invoke("changePasswordWithToken", new object[] {
                        personKey,
                        newPassword,
                        token});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangePasswordWithToken(personKey personKey, string newPassword, string token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changePasswordWithToken", new object[] {
                        personKey,
                        newPassword,
                        token}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndchangePasswordWithToken(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void changePasswordWithTokenAsync(personKey personKey, string newPassword, string token) {
            this.changePasswordWithTokenAsync(personKey, newPassword, token, null);
        }
        
        /// <remarks/>
        public void changePasswordWithTokenAsync(personKey personKey, string newPassword, string token, object userState) {
            if ((this.changePasswordWithTokenOperationCompleted == null)) {
                this.changePasswordWithTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordWithTokenOperationCompleted);
            }
            this.InvokeAsync("changePasswordWithToken", new object[] {
                        personKey,
                        newPassword,
                        token}, this.changePasswordWithTokenOperationCompleted, userState);
        }
        
        private void OnchangePasswordWithTokenOperationCompleted(object arg) {
            if ((this.changePasswordWithTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordWithTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void changePersonType(changePersonTypeParameter arg0) {
            this.Invoke("changePersonType", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangePersonType(changePersonTypeParameter arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changePersonType", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndchangePersonType(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void changePersonTypeAsync(changePersonTypeParameter arg0) {
            this.changePersonTypeAsync(arg0, null);
        }
        
        /// <remarks/>
        public void changePersonTypeAsync(changePersonTypeParameter arg0, object userState) {
            if ((this.changePersonTypeOperationCompleted == null)) {
                this.changePersonTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePersonTypeOperationCompleted);
            }
            this.InvokeAsync("changePersonType", new object[] {
                        arg0}, this.changePersonTypeOperationCompleted, userState);
        }
        
        private void OnchangePersonTypeOperationCompleted(object arg) {
            if ((this.changePersonTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePersonTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void changeSuspensionStatus(changeSuspensionStatusParameters parameters) {
            this.Invoke("changeSuspensionStatus", new object[] {
                        parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangeSuspensionStatus(changeSuspensionStatusParameters parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changeSuspensionStatus", new object[] {
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndchangeSuspensionStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void changeSuspensionStatusAsync(changeSuspensionStatusParameters parameters) {
            this.changeSuspensionStatusAsync(parameters, null);
        }
        
        /// <remarks/>
        public void changeSuspensionStatusAsync(changeSuspensionStatusParameters parameters, object userState) {
            if ((this.changeSuspensionStatusOperationCompleted == null)) {
                this.changeSuspensionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeSuspensionStatusOperationCompleted);
            }
            this.InvokeAsync("changeSuspensionStatus", new object[] {
                        parameters}, this.changeSuspensionStatusOperationCompleted, userState);
        }
        
        private void OnchangeSuspensionStatusOperationCompleted(object arg) {
            if ((this.changeSuspensionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeSuspensionStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void createDoctorNote(personKey arg0, journalNote arg1) {
            this.Invoke("createDoctorNote", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateDoctorNote(personKey arg0, journalNote arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createDoctorNote", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndcreateDoctorNote(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void createDoctorNoteAsync(personKey arg0, journalNote arg1) {
            this.createDoctorNoteAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createDoctorNoteAsync(personKey arg0, journalNote arg1, object userState) {
            if ((this.createDoctorNoteOperationCompleted == null)) {
                this.createDoctorNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDoctorNoteOperationCompleted);
            }
            this.InvokeAsync("createDoctorNote", new object[] {
                        arg0,
                        arg1}, this.createDoctorNoteOperationCompleted, userState);
        }
        
        private void OncreateDoctorNoteOperationCompleted(object arg) {
            if ((this.createDoctorNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDoctorNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void createJournalNote(personKey arg0, journalNote arg1) {
            this.Invoke("createJournalNote", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateJournalNote(personKey arg0, journalNote arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createJournalNote", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndcreateJournalNote(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void createJournalNoteAsync(personKey arg0, journalNote arg1) {
            this.createJournalNoteAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createJournalNoteAsync(personKey arg0, journalNote arg1, object userState) {
            if ((this.createJournalNoteOperationCompleted == null)) {
                this.createJournalNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateJournalNoteOperationCompleted);
            }
            this.InvokeAsync("createJournalNote", new object[] {
                        arg0,
                        arg1}, this.createJournalNoteOperationCompleted, userState);
        }
        
        private void OncreateJournalNoteOperationCompleted(object arg) {
            if ((this.createJournalNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createJournalNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("lead")]
        public person createLead(int centerId, createLeadParameters parameters) {
            object[] results = this.Invoke("createLead", new object[] {
                        centerId,
                        parameters});
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateLead(int centerId, createLeadParameters parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createLead", new object[] {
                        centerId,
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public person EndcreateLead(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public void createLeadAsync(int centerId, createLeadParameters parameters) {
            this.createLeadAsync(centerId, parameters, null);
        }
        
        /// <remarks/>
        public void createLeadAsync(int centerId, createLeadParameters parameters, object userState) {
            if ((this.createLeadOperationCompleted == null)) {
                this.createLeadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateLeadOperationCompleted);
            }
            this.InvokeAsync("createLead", new object[] {
                        centerId,
                        parameters}, this.createLeadOperationCompleted, userState);
        }
        
        private void OncreateLeadOperationCompleted(object arg) {
            if ((this.createLeadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createLeadCompleted(this, new createLeadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string createPaymentAgreement(compositeKey arg0, bankInfo arg1, personPaymentType arg2) {
            object[] results = this.Invoke("createPaymentAgreement", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePaymentAgreement(compositeKey arg0, bankInfo arg1, personPaymentType arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPaymentAgreement", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcreatePaymentAgreement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPaymentAgreementAsync(compositeKey arg0, bankInfo arg1, personPaymentType arg2) {
            this.createPaymentAgreementAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void createPaymentAgreementAsync(compositeKey arg0, bankInfo arg1, personPaymentType arg2, object userState) {
            if ((this.createPaymentAgreementOperationCompleted == null)) {
                this.createPaymentAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePaymentAgreementOperationCompleted);
            }
            this.InvokeAsync("createPaymentAgreement", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.createPaymentAgreementOperationCompleted, userState);
        }
        
        private void OncreatePaymentAgreementOperationCompleted(object arg) {
            if ((this.createPaymentAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPaymentAgreementCompleted(this, new createPaymentAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public person createPerson(int arg0, person arg1) {
            object[] results = this.Invoke("createPerson", new object[] {
                        arg0,
                        arg1});
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePerson(int arg0, person arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPerson", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public person EndcreatePerson(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public void createPersonAsync(int arg0, person arg1) {
            this.createPersonAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void createPersonAsync(int arg0, person arg1, object userState) {
            if ((this.createPersonOperationCompleted == null)) {
                this.createPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePersonOperationCompleted);
            }
            this.InvokeAsync("createPerson", new object[] {
                        arg0,
                        arg1}, this.createPersonOperationCompleted, userState);
        }
        
        private void OncreatePersonOperationCompleted(object arg) {
            if ((this.createPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPersonCompleted(this, new createPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("fullPersonCommunicationDetails")]
        public fullPersonAndCommunicationDetails createPersonWithCommunicationDetails(int centerId, fullPersonAndCommunicationDetails fullPersonCommunication) {
            object[] results = this.Invoke("createPersonWithCommunicationDetails", new object[] {
                        centerId,
                        fullPersonCommunication});
            return ((fullPersonAndCommunicationDetails)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePersonWithCommunicationDetails(int centerId, fullPersonAndCommunicationDetails fullPersonCommunication, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPersonWithCommunicationDetails", new object[] {
                        centerId,
                        fullPersonCommunication}, callback, asyncState);
        }
        
        /// <remarks/>
        public fullPersonAndCommunicationDetails EndcreatePersonWithCommunicationDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((fullPersonAndCommunicationDetails)(results[0]));
        }
        
        /// <remarks/>
        public void createPersonWithCommunicationDetailsAsync(int centerId, fullPersonAndCommunicationDetails fullPersonCommunication) {
            this.createPersonWithCommunicationDetailsAsync(centerId, fullPersonCommunication, null);
        }
        
        /// <remarks/>
        public void createPersonWithCommunicationDetailsAsync(int centerId, fullPersonAndCommunicationDetails fullPersonCommunication, object userState) {
            if ((this.createPersonWithCommunicationDetailsOperationCompleted == null)) {
                this.createPersonWithCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePersonWithCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("createPersonWithCommunicationDetails", new object[] {
                        centerId,
                        fullPersonCommunication}, this.createPersonWithCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OncreatePersonWithCommunicationDetailsOperationCompleted(object arg) {
            if ((this.createPersonWithCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPersonWithCommunicationDetailsCompleted(this, new createPersonWithCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("createdPerson")]
        public person createPersonWithPassword(int centerId, person person, string password, string pincode) {
            object[] results = this.Invoke("createPersonWithPassword", new object[] {
                        centerId,
                        person,
                        password,
                        pincode});
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreatePersonWithPassword(int centerId, person person, string password, string pincode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createPersonWithPassword", new object[] {
                        centerId,
                        person,
                        password,
                        pincode}, callback, asyncState);
        }
        
        /// <remarks/>
        public person EndcreatePersonWithPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public void createPersonWithPasswordAsync(int centerId, person person, string password, string pincode) {
            this.createPersonWithPasswordAsync(centerId, person, password, pincode, null);
        }
        
        /// <remarks/>
        public void createPersonWithPasswordAsync(int centerId, person person, string password, string pincode, object userState) {
            if ((this.createPersonWithPasswordOperationCompleted == null)) {
                this.createPersonWithPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePersonWithPasswordOperationCompleted);
            }
            this.InvokeAsync("createPersonWithPassword", new object[] {
                        centerId,
                        person,
                        password,
                        pincode}, this.createPersonWithPasswordOperationCompleted, userState);
        }
        
        private void OncreatePersonWithPasswordOperationCompleted(object arg) {
            if ((this.createPersonWithPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPersonWithPasswordCompleted(this, new createPersonWithPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("todo")]
        public toDo createToDo(createToDoParameter parameters) {
            object[] results = this.Invoke("createToDo", new object[] {
                        parameters});
            return ((toDo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateToDo(createToDoParameter parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createToDo", new object[] {
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public toDo EndcreateToDo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((toDo)(results[0]));
        }
        
        /// <remarks/>
        public void createToDoAsync(createToDoParameter parameters) {
            this.createToDoAsync(parameters, null);
        }
        
        /// <remarks/>
        public void createToDoAsync(createToDoParameter parameters, object userState) {
            if ((this.createToDoOperationCompleted == null)) {
                this.createToDoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateToDoOperationCompleted);
            }
            this.InvokeAsync("createToDo", new object[] {
                        parameters}, this.createToDoOperationCompleted, userState);
        }
        
        private void OncreateToDoOperationCompleted(object arg) {
            if ((this.createToDoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createToDoCompleted(this, new createToDoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool deleteExtendedAttribute(personKey arg0, string arg1) {
            object[] results = this.Invoke("deleteExtendedAttribute", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteExtendedAttribute(personKey arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteExtendedAttribute", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EnddeleteExtendedAttribute(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteExtendedAttributeAsync(personKey arg0, string arg1) {
            this.deleteExtendedAttributeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void deleteExtendedAttributeAsync(personKey arg0, string arg1, object userState) {
            if ((this.deleteExtendedAttributeOperationCompleted == null)) {
                this.deleteExtendedAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteExtendedAttributeOperationCompleted);
            }
            this.InvokeAsync("deleteExtendedAttribute", new object[] {
                        arg0,
                        arg1}, this.deleteExtendedAttributeOperationCompleted, userState);
        }
        
        private void OndeleteExtendedAttributeOperationCompleted(object arg) {
            if ((this.deleteExtendedAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteExtendedAttributeCompleted(this, new deleteExtendedAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public person[] findPersons(findPerson arg0) {
            object[] results = this.Invoke("findPersons", new object[] {
                        arg0});
            return ((person[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindPersons(findPerson arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findPersons", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public person[] EndfindPersons(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((person[])(results[0]));
        }
        
        /// <remarks/>
        public void findPersonsAsync(findPerson arg0) {
            this.findPersonsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void findPersonsAsync(findPerson arg0, object userState) {
            if ((this.findPersonsOperationCompleted == null)) {
                this.findPersonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPersonsOperationCompleted);
            }
            this.InvokeAsync("findPersons", new object[] {
                        arg0}, this.findPersonsOperationCompleted, userState);
        }
        
        private void OnfindPersonsOperationCompleted(object arg) {
            if ((this.findPersonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPersonsCompleted(this, new findPersonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public center[] getCenters(string arg0) {
            object[] results = this.Invoke("getCenters", new object[] {
                        arg0});
            return ((center[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCenters(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCenters", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public center[] EndgetCenters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((center[])(results[0]));
        }
        
        /// <remarks/>
        public void getCentersAsync(string arg0) {
            this.getCentersAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCentersAsync(string arg0, object userState) {
            if ((this.getCentersOperationCompleted == null)) {
                this.getCentersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentersOperationCompleted);
            }
            this.InvokeAsync("getCenters", new object[] {
                        arg0}, this.getCentersOperationCompleted, userState);
        }
        
        private void OngetCentersOperationCompleted(object arg) {
            if ((this.getCentersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentersCompleted(this, new getCentersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public center[] getCentersInArea(int arg0) {
            object[] results = this.Invoke("getCentersInArea", new object[] {
                        arg0});
            return ((center[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCentersInArea(int arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCentersInArea", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public center[] EndgetCentersInArea(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((center[])(results[0]));
        }
        
        /// <remarks/>
        public void getCentersInAreaAsync(int arg0) {
            this.getCentersInAreaAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCentersInAreaAsync(int arg0, object userState) {
            if ((this.getCentersInAreaOperationCompleted == null)) {
                this.getCentersInAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentersInAreaOperationCompleted);
            }
            this.InvokeAsync("getCentersInArea", new object[] {
                        arg0}, this.getCentersInAreaOperationCompleted, userState);
        }
        
        private void OngetCentersInAreaOperationCompleted(object arg) {
            if ((this.getCentersInAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentersInAreaCompleted(this, new getCentersInAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getCitiesForZipcode(string arg0, string arg1) {
            object[] results = this.Invoke("getCitiesForZipcode", new object[] {
                        arg0,
                        arg1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCitiesForZipcode(string arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCitiesForZipcode", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndgetCitiesForZipcode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCitiesForZipcodeAsync(string arg0, string arg1) {
            this.getCitiesForZipcodeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getCitiesForZipcodeAsync(string arg0, string arg1, object userState) {
            if ((this.getCitiesForZipcodeOperationCompleted == null)) {
                this.getCitiesForZipcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCitiesForZipcodeOperationCompleted);
            }
            this.InvokeAsync("getCitiesForZipcode", new object[] {
                        arg0,
                        arg1}, this.getCitiesForZipcodeOperationCompleted, userState);
        }
        
        private void OngetCitiesForZipcodeOperationCompleted(object arg) {
            if ((this.getCitiesForZipcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCitiesForZipcodeCompleted(this, new getCitiesForZipcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public personCommunication getCommunicationDetails(personKey arg0) {
            object[] results = this.Invoke("getCommunicationDetails", new object[] {
                        arg0});
            return ((personCommunication)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCommunicationDetails(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCommunicationDetails", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public personCommunication EndgetCommunicationDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((personCommunication)(results[0]));
        }
        
        /// <remarks/>
        public void getCommunicationDetailsAsync(personKey arg0) {
            this.getCommunicationDetailsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCommunicationDetailsAsync(personKey arg0, object userState) {
            if ((this.getCommunicationDetailsOperationCompleted == null)) {
                this.getCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("getCommunicationDetails", new object[] {
                        arg0}, this.getCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OngetCommunicationDetailsOperationCompleted(object arg) {
            if ((this.getCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommunicationDetailsCompleted(this, new getCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public compositeKey getCurrentPersonId(personKey arg0) {
            object[] results = this.Invoke("getCurrentPersonId", new object[] {
                        arg0});
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCurrentPersonId(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCurrentPersonId", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public compositeKey EndgetCurrentPersonId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentPersonIdAsync(personKey arg0) {
            this.getCurrentPersonIdAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getCurrentPersonIdAsync(personKey arg0, object userState) {
            if ((this.getCurrentPersonIdOperationCompleted == null)) {
                this.getCurrentPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentPersonIdOperationCompleted);
            }
            this.InvokeAsync("getCurrentPersonId", new object[] {
                        arg0}, this.getCurrentPersonIdOperationCompleted, userState);
        }
        
        private void OngetCurrentPersonIdOperationCompleted(object arg) {
            if ((this.getCurrentPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentPersonIdCompleted(this, new getCurrentPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("centerDetail")]
        public centerDetail getDetailForCenter(int centerId) {
            object[] results = this.Invoke("getDetailForCenter", new object[] {
                        centerId});
            return ((centerDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDetailForCenter(int centerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDetailForCenter", new object[] {
                        centerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public centerDetail EndgetDetailForCenter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((centerDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getDetailForCenterAsync(int centerId) {
            this.getDetailForCenterAsync(centerId, null);
        }
        
        /// <remarks/>
        public void getDetailForCenterAsync(int centerId, object userState) {
            if ((this.getDetailForCenterOperationCompleted == null)) {
                this.getDetailForCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailForCenterOperationCompleted);
            }
            this.InvokeAsync("getDetailForCenter", new object[] {
                        centerId}, this.getDetailForCenterOperationCompleted, userState);
        }
        
        private void OngetDetailForCenterOperationCompleted(object arg) {
            if ((this.getDetailForCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDetailForCenterCompleted(this, new getDetailForCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("centerDetails")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centerDetail[] getDetailForCenters(string country) {
            object[] results = this.Invoke("getDetailForCenters", new object[] {
                        country});
            return ((centerDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDetailForCenters(string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDetailForCenters", new object[] {
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public centerDetail[] EndgetDetailForCenters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((centerDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getDetailForCentersAsync(string country) {
            this.getDetailForCentersAsync(country, null);
        }
        
        /// <remarks/>
        public void getDetailForCentersAsync(string country, object userState) {
            if ((this.getDetailForCentersOperationCompleted == null)) {
                this.getDetailForCentersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailForCentersOperationCompleted);
            }
            this.InvokeAsync("getDetailForCenters", new object[] {
                        country}, this.getDetailForCentersOperationCompleted, userState);
        }
        
        private void OngetDetailForCentersOperationCompleted(object arg) {
            if ((this.getDetailForCentersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDetailForCentersCompleted(this, new getDetailForCentersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("centerDetails")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centerDetail[] getDetailForCentersInArea(int areaId) {
            object[] results = this.Invoke("getDetailForCentersInArea", new object[] {
                        areaId});
            return ((centerDetail[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDetailForCentersInArea(int areaId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDetailForCentersInArea", new object[] {
                        areaId}, callback, asyncState);
        }
        
        /// <remarks/>
        public centerDetail[] EndgetDetailForCentersInArea(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((centerDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void getDetailForCentersInAreaAsync(int areaId) {
            this.getDetailForCentersInAreaAsync(areaId, null);
        }
        
        /// <remarks/>
        public void getDetailForCentersInAreaAsync(int areaId, object userState) {
            if ((this.getDetailForCentersInAreaOperationCompleted == null)) {
                this.getDetailForCentersInAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailForCentersInAreaOperationCompleted);
            }
            this.InvokeAsync("getDetailForCentersInArea", new object[] {
                        areaId}, this.getDetailForCentersInAreaOperationCompleted, userState);
        }
        
        private void OngetDetailForCentersInAreaOperationCompleted(object arg) {
            if ((this.getDetailForCentersInAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDetailForCentersInAreaCompleted(this, new getDetailForCentersInAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public person getDetails(personKey arg0) {
            object[] results = this.Invoke("getDetails", new object[] {
                        arg0});
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDetails(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDetails", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public person EndgetDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public void getDetailsAsync(personKey arg0) {
            this.getDetailsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getDetailsAsync(personKey arg0, object userState) {
            if ((this.getDetailsOperationCompleted == null)) {
                this.getDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailsOperationCompleted);
            }
            this.InvokeAsync("getDetails", new object[] {
                        arg0}, this.getDetailsOperationCompleted, userState);
        }
        
        private void OngetDetailsOperationCompleted(object arg) {
            if ((this.getDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDetailsCompleted(this, new getDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mimeDocument getExtendedAttributeMIME(personKey arg0, string arg1) {
            object[] results = this.Invoke("getExtendedAttributeMIME", new object[] {
                        arg0,
                        arg1});
            return ((mimeDocument)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetExtendedAttributeMIME(personKey arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getExtendedAttributeMIME", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public mimeDocument EndgetExtendedAttributeMIME(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((mimeDocument)(results[0]));
        }
        
        /// <remarks/>
        public void getExtendedAttributeMIMEAsync(personKey arg0, string arg1) {
            this.getExtendedAttributeMIMEAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getExtendedAttributeMIMEAsync(personKey arg0, string arg1, object userState) {
            if ((this.getExtendedAttributeMIMEOperationCompleted == null)) {
                this.getExtendedAttributeMIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtendedAttributeMIMEOperationCompleted);
            }
            this.InvokeAsync("getExtendedAttributeMIME", new object[] {
                        arg0,
                        arg1}, this.getExtendedAttributeMIMEOperationCompleted, userState);
        }
        
        private void OngetExtendedAttributeMIMEOperationCompleted(object arg) {
            if ((this.getExtendedAttributeMIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtendedAttributeMIMECompleted(this, new getExtendedAttributeMIMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getExtendedAttributeText(personKey arg0, string arg1) {
            object[] results = this.Invoke("getExtendedAttributeText", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetExtendedAttributeText(personKey arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getExtendedAttributeText", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetExtendedAttributeText(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getExtendedAttributeTextAsync(personKey arg0, string arg1) {
            this.getExtendedAttributeTextAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getExtendedAttributeTextAsync(personKey arg0, string arg1, object userState) {
            if ((this.getExtendedAttributeTextOperationCompleted == null)) {
                this.getExtendedAttributeTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExtendedAttributeTextOperationCompleted);
            }
            this.InvokeAsync("getExtendedAttributeText", new object[] {
                        arg0,
                        arg1}, this.getExtendedAttributeTextOperationCompleted, userState);
        }
        
        private void OngetExtendedAttributeTextOperationCompleted(object arg) {
            if ((this.getExtendedAttributeTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getExtendedAttributeTextCompleted(this, new getExtendedAttributeTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public journalNoteDocument getJournalNoteDocument(int arg0) {
            object[] results = this.Invoke("getJournalNoteDocument", new object[] {
                        arg0});
            return ((journalNoteDocument)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetJournalNoteDocument(int arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getJournalNoteDocument", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public journalNoteDocument EndgetJournalNoteDocument(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((journalNoteDocument)(results[0]));
        }
        
        /// <remarks/>
        public void getJournalNoteDocumentAsync(int arg0) {
            this.getJournalNoteDocumentAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getJournalNoteDocumentAsync(int arg0, object userState) {
            if ((this.getJournalNoteDocumentOperationCompleted == null)) {
                this.getJournalNoteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJournalNoteDocumentOperationCompleted);
            }
            this.InvokeAsync("getJournalNoteDocument", new object[] {
                        arg0}, this.getJournalNoteDocumentOperationCompleted, userState);
        }
        
        private void OngetJournalNoteDocumentOperationCompleted(object arg) {
            if ((this.getJournalNoteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJournalNoteDocumentCompleted(this, new getJournalNoteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public journalNote[] getJournalNotes(journalNoteParameters arg0) {
            object[] results = this.Invoke("getJournalNotes", new object[] {
                        arg0});
            return ((journalNote[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetJournalNotes(journalNoteParameters arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getJournalNotes", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public journalNote[] EndgetJournalNotes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((journalNote[])(results[0]));
        }
        
        /// <remarks/>
        public void getJournalNotesAsync(journalNoteParameters arg0) {
            this.getJournalNotesAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getJournalNotesAsync(journalNoteParameters arg0, object userState) {
            if ((this.getJournalNotesOperationCompleted == null)) {
                this.getJournalNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJournalNotesOperationCompleted);
            }
            this.InvokeAsync("getJournalNotes", new object[] {
                        arg0}, this.getJournalNotesOperationCompleted, userState);
        }
        
        private void OngetJournalNotesOperationCompleted(object arg) {
            if ((this.getJournalNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJournalNotesCompleted(this, new getJournalNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("passportCountries")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public passportCountry[] getPassportCountries() {
            object[] results = this.Invoke("getPassportCountries", new object[0]);
            return ((passportCountry[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPassportCountries(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPassportCountries", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public passportCountry[] EndgetPassportCountries(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((passportCountry[])(results[0]));
        }
        
        /// <remarks/>
        public void getPassportCountriesAsync() {
            this.getPassportCountriesAsync(null);
        }
        
        /// <remarks/>
        public void getPassportCountriesAsync(object userState) {
            if ((this.getPassportCountriesOperationCompleted == null)) {
                this.getPassportCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPassportCountriesOperationCompleted);
            }
            this.InvokeAsync("getPassportCountries", new object[0], this.getPassportCountriesOperationCompleted, userState);
        }
        
        private void OngetPassportCountriesOperationCompleted(object arg) {
            if ((this.getPassportCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPassportCountriesCompleted(this, new getPassportCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("personDetail")]
        public personDetail getPersonDetail(personKey arg0) {
            object[] results = this.Invoke("getPersonDetail", new object[] {
                        arg0});
            return ((personDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPersonDetail(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPersonDetail", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public personDetail EndgetPersonDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((personDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getPersonDetailAsync(personKey arg0) {
            this.getPersonDetailAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getPersonDetailAsync(personKey arg0, object userState) {
            if ((this.getPersonDetailOperationCompleted == null)) {
                this.getPersonDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonDetailOperationCompleted);
            }
            this.InvokeAsync("getPersonDetail", new object[] {
                        arg0}, this.getPersonDetailOperationCompleted, userState);
        }
        
        private void OngetPersonDetailOperationCompleted(object arg) {
            if ((this.getPersonDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonDetailCompleted(this, new getPersonDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("personDetail")]
        public personDetail getPersonDetailByLogin(string arg0, string arg1) {
            object[] results = this.Invoke("getPersonDetailByLogin", new object[] {
                        arg0,
                        arg1});
            return ((personDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPersonDetailByLogin(string arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPersonDetailByLogin", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public personDetail EndgetPersonDetailByLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((personDetail)(results[0]));
        }
        
        /// <remarks/>
        public void getPersonDetailByLoginAsync(string arg0, string arg1) {
            this.getPersonDetailByLoginAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getPersonDetailByLoginAsync(string arg0, string arg1, object userState) {
            if ((this.getPersonDetailByLoginOperationCompleted == null)) {
                this.getPersonDetailByLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonDetailByLoginOperationCompleted);
            }
            this.InvokeAsync("getPersonDetailByLogin", new object[] {
                        arg0,
                        arg1}, this.getPersonDetailByLoginOperationCompleted, userState);
        }
        
        private void OngetPersonDetailByLoginOperationCompleted(object arg) {
            if ((this.getPersonDetailByLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonDetailByLoginCompleted(this, new getPersonDetailByLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("scope")]
        public scope getScope(scopeType scopeType, int scopeId) {
            object[] results = this.Invoke("getScope", new object[] {
                        scopeType,
                        scopeId});
            return ((scope)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetScope(scopeType scopeType, int scopeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getScope", new object[] {
                        scopeType,
                        scopeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public scope EndgetScope(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((scope)(results[0]));
        }
        
        /// <remarks/>
        public void getScopeAsync(scopeType scopeType, int scopeId) {
            this.getScopeAsync(scopeType, scopeId, null);
        }
        
        /// <remarks/>
        public void getScopeAsync(scopeType scopeType, int scopeId, object userState) {
            if ((this.getScopeOperationCompleted == null)) {
                this.getScopeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetScopeOperationCompleted);
            }
            this.InvokeAsync("getScope", new object[] {
                        scopeType,
                        scopeId}, this.getScopeOperationCompleted, userState);
        }
        
        private void OngetScopeOperationCompleted(object arg) {
            if ((this.getScopeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getScopeCompleted(this, new getScopeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public personTypeAndStatus getTypeAndStatus(personKey arg0) {
            object[] results = this.Invoke("getTypeAndStatus", new object[] {
                        arg0});
            return ((personTypeAndStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetTypeAndStatus(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getTypeAndStatus", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public personTypeAndStatus EndgetTypeAndStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((personTypeAndStatus)(results[0]));
        }
        
        /// <remarks/>
        public void getTypeAndStatusAsync(personKey arg0) {
            this.getTypeAndStatusAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getTypeAndStatusAsync(personKey arg0, object userState) {
            if ((this.getTypeAndStatusOperationCompleted == null)) {
                this.getTypeAndStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTypeAndStatusOperationCompleted);
            }
            this.InvokeAsync("getTypeAndStatus", new object[] {
                        arg0}, this.getTypeAndStatusOperationCompleted, userState);
        }
        
        private void OngetTypeAndStatusOperationCompleted(object arg) {
            if ((this.getTypeAndStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTypeAndStatusCompleted(this, new getTypeAndStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void overridePartnerBenefitActivationAuthorizationCode(overridePartnerBenefitActivationAuthorizationCodeParameters parameters) {
            this.Invoke("overridePartnerBenefitActivationAuthorizationCode", new object[] {
                        parameters});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginoverridePartnerBenefitActivationAuthorizationCode(overridePartnerBenefitActivationAuthorizationCodeParameters parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("overridePartnerBenefitActivationAuthorizationCode", new object[] {
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndoverridePartnerBenefitActivationAuthorizationCode(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void overridePartnerBenefitActivationAuthorizationCodeAsync(overridePartnerBenefitActivationAuthorizationCodeParameters parameters) {
            this.overridePartnerBenefitActivationAuthorizationCodeAsync(parameters, null);
        }
        
        /// <remarks/>
        public void overridePartnerBenefitActivationAuthorizationCodeAsync(overridePartnerBenefitActivationAuthorizationCodeParameters parameters, object userState) {
            if ((this.overridePartnerBenefitActivationAuthorizationCodeOperationCompleted == null)) {
                this.overridePartnerBenefitActivationAuthorizationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoverridePartnerBenefitActivationAuthorizationCodeOperationCompleted);
            }
            this.InvokeAsync("overridePartnerBenefitActivationAuthorizationCode", new object[] {
                        parameters}, this.overridePartnerBenefitActivationAuthorizationCodeOperationCompleted, userState);
        }
        
        private void OnoverridePartnerBenefitActivationAuthorizationCodeOperationCompleted(object arg) {
            if ((this.overridePartnerBenefitActivationAuthorizationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.overridePartnerBenefitActivationAuthorizationCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void removePersonReferrer(personKey arg0) {
            this.Invoke("removePersonReferrer", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginremovePersonReferrer(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("removePersonReferrer", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndremovePersonReferrer(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void removePersonReferrerAsync(personKey arg0) {
            this.removePersonReferrerAsync(arg0, null);
        }
        
        /// <remarks/>
        public void removePersonReferrerAsync(personKey arg0, object userState) {
            if ((this.removePersonReferrerOperationCompleted == null)) {
                this.removePersonReferrerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremovePersonReferrerOperationCompleted);
            }
            this.InvokeAsync("removePersonReferrer", new object[] {
                        arg0}, this.removePersonReferrerOperationCompleted, userState);
        }
        
        private void OnremovePersonReferrerOperationCompleted(object arg) {
            if ((this.removePersonReferrerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removePersonReferrerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendPassword(personKey arg0) {
            this.Invoke("sendPassword", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsendPassword(personKey arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendPassword", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsendPassword(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void sendPasswordAsync(personKey arg0) {
            this.sendPasswordAsync(arg0, null);
        }
        
        /// <remarks/>
        public void sendPasswordAsync(personKey arg0, object userState) {
            if ((this.sendPasswordOperationCompleted == null)) {
                this.sendPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPasswordOperationCompleted);
            }
            this.InvokeAsync("sendPassword", new object[] {
                        arg0}, this.sendPasswordOperationCompleted, userState);
        }
        
        private void OnsendPasswordOperationCompleted(object arg) {
            if ((this.sendPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void sendPasswordToken(personKey personKey) {
            this.Invoke("sendPasswordToken", new object[] {
                        personKey});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsendPasswordToken(personKey personKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendPasswordToken", new object[] {
                        personKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsendPasswordToken(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void sendPasswordTokenAsync(personKey personKey) {
            this.sendPasswordTokenAsync(personKey, null);
        }
        
        /// <remarks/>
        public void sendPasswordTokenAsync(personKey personKey, object userState) {
            if ((this.sendPasswordTokenOperationCompleted == null)) {
                this.sendPasswordTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendPasswordTokenOperationCompleted);
            }
            this.InvokeAsync("sendPasswordToken", new object[] {
                        personKey}, this.sendPasswordTokenOperationCompleted, userState);
        }
        
        private void OnsendPasswordTokenOperationCompleted(object arg) {
            if ((this.sendPasswordTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendPasswordTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPersonReferrer(personKey arg0, compositeKey arg1) {
            this.Invoke("setPersonReferrer", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetPersonReferrer(personKey arg0, compositeKey arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setPersonReferrer", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetPersonReferrer(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setPersonReferrerAsync(personKey arg0, compositeKey arg1) {
            this.setPersonReferrerAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void setPersonReferrerAsync(personKey arg0, compositeKey arg1, object userState) {
            if ((this.setPersonReferrerOperationCompleted == null)) {
                this.setPersonReferrerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPersonReferrerOperationCompleted);
            }
            this.InvokeAsync("setPersonReferrer", new object[] {
                        arg0,
                        arg1}, this.setPersonReferrerOperationCompleted, userState);
        }
        
        private void OnsetPersonReferrerOperationCompleted(object arg) {
            if ((this.setPersonReferrerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPersonReferrerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("transferAnyPersonInfo")]
        public transferAnyPersonInfo transferAnyPerson(transferAnyPersonParameters parameters) {
            object[] results = this.Invoke("transferAnyPerson", new object[] {
                        parameters});
            return ((transferAnyPersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintransferAnyPerson(transferAnyPersonParameters parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transferAnyPerson", new object[] {
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public transferAnyPersonInfo EndtransferAnyPerson(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((transferAnyPersonInfo)(results[0]));
        }
        
        /// <remarks/>
        public void transferAnyPersonAsync(transferAnyPersonParameters parameters) {
            this.transferAnyPersonAsync(parameters, null);
        }
        
        /// <remarks/>
        public void transferAnyPersonAsync(transferAnyPersonParameters parameters, object userState) {
            if ((this.transferAnyPersonOperationCompleted == null)) {
                this.transferAnyPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferAnyPersonOperationCompleted);
            }
            this.InvokeAsync("transferAnyPerson", new object[] {
                        parameters}, this.transferAnyPersonOperationCompleted, userState);
        }
        
        private void OntransferAnyPersonOperationCompleted(object arg) {
            if ((this.transferAnyPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferAnyPersonCompleted(this, new transferAnyPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public personKey transferPerson(personKey arg0, int arg1) {
            object[] results = this.Invoke("transferPerson", new object[] {
                        arg0,
                        arg1});
            return ((personKey)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintransferPerson(personKey arg0, int arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("transferPerson", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public personKey EndtransferPerson(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((personKey)(results[0]));
        }
        
        /// <remarks/>
        public void transferPersonAsync(personKey arg0, int arg1) {
            this.transferPersonAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void transferPersonAsync(personKey arg0, int arg1, object userState) {
            if ((this.transferPersonOperationCompleted == null)) {
                this.transferPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferPersonOperationCompleted);
            }
            this.InvokeAsync("transferPerson", new object[] {
                        arg0,
                        arg1}, this.transferPersonOperationCompleted, userState);
        }
        
        private void OntransferPersonOperationCompleted(object arg) {
            if ((this.transferPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferPersonCompleted(this, new transferPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateCommunicationDetails(personCommunication arg0) {
            this.Invoke("updateCommunicationDetails", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateCommunicationDetails(personCommunication arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateCommunicationDetails", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateCommunicationDetails(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateCommunicationDetailsAsync(personCommunication arg0) {
            this.updateCommunicationDetailsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void updateCommunicationDetailsAsync(personCommunication arg0, object userState) {
            if ((this.updateCommunicationDetailsOperationCompleted == null)) {
                this.updateCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("updateCommunicationDetails", new object[] {
                        arg0}, this.updateCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnupdateCommunicationDetailsOperationCompleted(object arg) {
            if ((this.updateCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCommunicationDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public person updateDetails(person arg0) {
            object[] results = this.Invoke("updateDetails", new object[] {
                        arg0});
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateDetails(person arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateDetails", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public person EndupdateDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((person)(results[0]));
        }
        
        /// <remarks/>
        public void updateDetailsAsync(person arg0) {
            this.updateDetailsAsync(arg0, null);
        }
        
        /// <remarks/>
        public void updateDetailsAsync(person arg0, object userState) {
            if ((this.updateDetailsOperationCompleted == null)) {
                this.updateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDetailsOperationCompleted);
            }
            this.InvokeAsync("updateDetails", new object[] {
                        arg0}, this.updateDetailsOperationCompleted, userState);
        }
        
        private void OnupdateDetailsOperationCompleted(object arg) {
            if ((this.updateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDetailsCompleted(this, new updateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateExtendedAttributeMIME(personKey arg0, string arg1, mimeDocument arg2) {
            this.Invoke("updateExtendedAttributeMIME", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateExtendedAttributeMIME(personKey arg0, string arg1, mimeDocument arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateExtendedAttributeMIME", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateExtendedAttributeMIME(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateExtendedAttributeMIMEAsync(personKey arg0, string arg1, mimeDocument arg2) {
            this.updateExtendedAttributeMIMEAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateExtendedAttributeMIMEAsync(personKey arg0, string arg1, mimeDocument arg2, object userState) {
            if ((this.updateExtendedAttributeMIMEOperationCompleted == null)) {
                this.updateExtendedAttributeMIMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateExtendedAttributeMIMEOperationCompleted);
            }
            this.InvokeAsync("updateExtendedAttributeMIME", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateExtendedAttributeMIMEOperationCompleted, userState);
        }
        
        private void OnupdateExtendedAttributeMIMEOperationCompleted(object arg) {
            if ((this.updateExtendedAttributeMIMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateExtendedAttributeMIMECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void updateExtendedAttributeText(personKey arg0, string arg1, string arg2) {
            this.Invoke("updateExtendedAttributeText", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateExtendedAttributeText(personKey arg0, string arg1, string arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateExtendedAttributeText", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndupdateExtendedAttributeText(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateExtendedAttributeTextAsync(personKey arg0, string arg1, string arg2) {
            this.updateExtendedAttributeTextAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updateExtendedAttributeTextAsync(personKey arg0, string arg1, string arg2, object userState) {
            if ((this.updateExtendedAttributeTextOperationCompleted == null)) {
                this.updateExtendedAttributeTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateExtendedAttributeTextOperationCompleted);
            }
            this.InvokeAsync("updateExtendedAttributeText", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updateExtendedAttributeTextOperationCompleted, userState);
        }
        
        private void OnupdateExtendedAttributeTextOperationCompleted(object arg) {
            if ((this.updateExtendedAttributeTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateExtendedAttributeTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bankInfo validateBankInfo(string arg0, bankInfo arg1) {
            object[] results = this.Invoke("validateBankInfo", new object[] {
                        arg0,
                        arg1});
            return ((bankInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidateBankInfo(string arg0, bankInfo arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validateBankInfo", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public bankInfo EndvalidateBankInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bankInfo)(results[0]));
        }
        
        /// <remarks/>
        public void validateBankInfoAsync(string arg0, bankInfo arg1) {
            this.validateBankInfoAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void validateBankInfoAsync(string arg0, bankInfo arg1, object userState) {
            if ((this.validateBankInfoOperationCompleted == null)) {
                this.validateBankInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateBankInfoOperationCompleted);
            }
            this.InvokeAsync("validateBankInfo", new object[] {
                        arg0,
                        arg1}, this.validateBankInfoOperationCompleted, userState);
        }
        
        private void OnvalidateBankInfoOperationCompleted(object arg) {
            if ((this.validateBankInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateBankInfoCompleted(this, new validateBankInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public validationResult validatePerson(int centerId, person person) {
            object[] results = this.Invoke("validatePerson", new object[] {
                        centerId,
                        person});
            return ((validationResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidatePerson(int centerId, person person, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validatePerson", new object[] {
                        centerId,
                        person}, callback, asyncState);
        }
        
        /// <remarks/>
        public validationResult EndvalidatePerson(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((validationResult)(results[0]));
        }
        
        /// <remarks/>
        public void validatePersonAsync(int centerId, person person) {
            this.validatePersonAsync(centerId, person, null);
        }
        
        /// <remarks/>
        public void validatePersonAsync(int centerId, person person, object userState) {
            if ((this.validatePersonOperationCompleted == null)) {
                this.validatePersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidatePersonOperationCompleted);
            }
            this.InvokeAsync("validatePerson", new object[] {
                        centerId,
                        person}, this.validatePersonOperationCompleted, userState);
        }
        
        private void OnvalidatePersonOperationCompleted(object arg) {
            if ((this.validatePersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validatePersonCompleted(this, new validatePersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void validatePhoneNumber(string arg0, string arg1) {
            this.Invoke("validatePhoneNumber", new object[] {
                        arg0,
                        arg1});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidatePhoneNumber(string arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validatePhoneNumber", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndvalidatePhoneNumber(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void validatePhoneNumberAsync(string arg0, string arg1) {
            this.validatePhoneNumberAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void validatePhoneNumberAsync(string arg0, string arg1, object userState) {
            if ((this.validatePhoneNumberOperationCompleted == null)) {
                this.validatePhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidatePhoneNumberOperationCompleted);
            }
            this.InvokeAsync("validatePhoneNumber", new object[] {
                        arg0,
                        arg1}, this.validatePhoneNumberOperationCompleted, userState);
        }
        
        private void OnvalidatePhoneNumberOperationCompleted(object arg) {
            if ((this.validatePhoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validatePhoneNumberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class personKey : compositeKey {
        
        private string externalIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(compositeSubKey))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(personKey))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class compositeKey {
        
        private int centerField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int center {
            get {
                return this.centerField;
            }
            set {
                this.centerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class validationProblem {
        
        private errorCode errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string messageField;
        
        private string[] propertyNamesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public errorCode errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool errorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("propertyNames", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] propertyNames {
            get {
                return this.propertyNamesField;
            }
            set {
                this.propertyNamesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum errorCode {
        
        /// <remarks/>
        UNKNOWN_ERROR,
        
        /// <remarks/>
        CREATE_EXCEPTION,
        
        /// <remarks/>
        REMOVE_EXCEPTION,
        
        /// <remarks/>
        SECURITY,
        
        /// <remarks/>
        SECURITY_ROLE,
        
        /// <remarks/>
        ARGUMENT_IS_NULL,
        
        /// <remarks/>
        ILLEGAL_ARGUMENT,
        
        /// <remarks/>
        PARSE_ERROR,
        
        /// <remarks/>
        ENTITY_NOT_FOUND,
        
        /// <remarks/>
        CONFLICTING_CHANGE,
        
        /// <remarks/>
        INVALID_ZIPCODE,
        
        /// <remarks/>
        INVALID_SOCIAL_SECURITY_NUMBER,
        
        /// <remarks/>
        INVALID_COMPANYID,
        
        /// <remarks/>
        INVALID_PHONE_NUMBER,
        
        /// <remarks/>
        CLIENT,
        
        /// <remarks/>
        ENTITY_IDENTIFIER_STATUS,
        
        /// <remarks/>
        DUPLICATE_PERSON,
        
        /// <remarks/>
        FRIEND_RESTRICTION,
        
        /// <remarks/>
        DUPLICATE_COMPANY,
        
        /// <remarks/>
        EXPENSIVE_SEARCH,
        
        /// <remarks/>
        MULTIPLE_PERSONS_FOUND,
        
        /// <remarks/>
        NOT_DELIVERABLE,
        
        /// <remarks/>
        CIRCULAR_REFERENCE,
        
        /// <remarks/>
        REFERENCE,
        
        /// <remarks/>
        PERSON_NOT_EDITABLE,
        
        /// <remarks/>
        PERSON_TRANSFER,
        
        /// <remarks/>
        NO_CLEARING_HOUSE_FOUND,
        
        /// <remarks/>
        ACCOUNT_RECEIVABLE_IS_BLOCKED,
        
        /// <remarks/>
        BANK_ACCOUNT_IS_BLOCKED,
        
        /// <remarks/>
        DEBIT_MAX,
        
        /// <remarks/>
        INVALID_PAYMENT_AGREEMENT,
        
        /// <remarks/>
        INVALID_BANK_INFO,
        
        /// <remarks/>
        NO_CLEARING_HOUSE_CREDITOR_FOUND,
        
        /// <remarks/>
        PARTICIPATION_TIME_INTERVAL_OVERLAP,
        
        /// <remarks/>
        PARTICIPATION_PERSON_BLACKLISTED,
        
        /// <remarks/>
        PARTICIPATION_PERSON_BLOCKED,
        
        /// <remarks/>
        PARTICIPATION_PERSON_DOUBLE_PARTICIPATION,
        
        /// <remarks/>
        BOOKING_WAITING_LIST_FULL,
        
        /// <remarks/>
        BOOKING_OUTSIDE_TIME_INTERVAL,
        
        /// <remarks/>
        BOOKING_RESTRICTION,
        
        /// <remarks/>
        CUSTOMER_CANCEL_OUTSIDE_TIME_INTERVAL,
        
        /// <remarks/>
        CENTER_CANCEL_OUTSIDE_TIME_INTERVAL,
        
        /// <remarks/>
        BOOKING_COLLECTION_NOT_PAID_FOR,
        
        /// <remarks/>
        NO_PRIVILEGE_FOR_PARTICIPATION,
        
        /// <remarks/>
        ALL_PARTICIPATIONS_TAKEN,
        
        /// <remarks/>
        SHOWUP_OUTSIDE_TIME_INTERVAL,
        
        /// <remarks/>
        ILLEGAL_BOOKING_STATE_FOR_CANCELLATION,
        
        /// <remarks/>
        TOO_EARLY_TO_BOOK_PARTICIPANT,
        
        /// <remarks/>
        TOO_EARLY_TO_SHOWUP,
        
        /// <remarks/>
        TOO_LATE_TO_SHOWUP,
        
        /// <remarks/>
        PARTICIPANT_TOO_MANY_OPEN_BOOKINGS,
        
        /// <remarks/>
        RESOURCE_OCCUPIED,
        
        /// <remarks/>
        RESOURCE_START_TIME_RESTRICTION,
        
        /// <remarks/>
        RESOURCE_TIME_RESTRICTION,
        
        /// <remarks/>
        ACTIVITY_STATE_INVALID,
        
        /// <remarks/>
        NO_PARENT_BOOKING_FOUND,
        
        /// <remarks/>
        STAFF_BLACKLISTED,
        
        /// <remarks/>
        STAFF_OCCUPIED,
        
        /// <remarks/>
        TOO_MANY_SUB_STAFF_USAGES,
        
        /// <remarks/>
        PARTICIPANT_ALREADY_BOOKED,
        
        /// <remarks/>
        PARTICIPANT_ALREADY_SHOWEDUP,
        
        /// <remarks/>
        ILLEGAL_BOOKING_STATE_FOR_BOOKING,
        
        /// <remarks/>
        LISTS_FULL,
        
        /// <remarks/>
        TOO_LATE_TO_BOOK_PARTICIPANT,
        
        /// <remarks/>
        PARTICIPANT_OCCUPIED,
        
        /// <remarks/>
        FULL_BOOKING_RESTRICTION,
        
        /// <remarks/>
        IN_ADVANCE_LIMIT_BOOKING_RESTRICTION,
        
        /// <remarks/>
        PERSON_DOUBLE_PARTICIPATION,
        
        /// <remarks/>
        PARTICIPANT_BLACKLISTED,
        
        /// <remarks/>
        TOO_LATE_TO_CANCEL_BOOKING,
        
        /// <remarks/>
        TOO_LATE_TO_CANCEL_BY_CENTER,
        
        /// <remarks/>
        TOO_LATE_TO_CANCEL_BY_CUSTOMER,
        
        /// <remarks/>
        UNABLE_TO_REFRESH_WAITING_LIST,
        
        /// <remarks/>
        TOO_FEW_PARTICIPANTS,
        
        /// <remarks/>
        FREEZE_MAX_PREBOOK_PERIOD,
        
        /// <remarks/>
        FREEZE_MIN_OR_MAX_DURATION,
        
        /// <remarks/>
        FREEZE_TOO_LONG,
        
        /// <remarks/>
        FREEZE_TOO_SHORT,
        
        /// <remarks/>
        FREEZE_MAX_NUMBER_REACHED,
        
        /// <remarks/>
        TOO_MANY_FREEZES_PERIOD,
        
        /// <remarks/>
        TOO_MANY_FREEZES_TOTAL,
        
        /// <remarks/>
        FREEZE_MAX_TOTAL_DURATION_REACHED,
        
        /// <remarks/>
        FREEZE_NOT_ALLOWED,
        
        /// <remarks/>
        FREEZE_START_AND_STOP_DATE,
        
        /// <remarks/>
        FREEZE_START_IN_THE_PAST,
        
        /// <remarks/>
        FREEZE_END_BEFORE_SUBSCRIPTION_END,
        
        /// <remarks/>
        FREEZE_START_AFTER_SUBSCRIPTION_END,
        
        /// <remarks/>
        FREEZE_START_BEFORE_SUBSCRIPTION_START,
        
        /// <remarks/>
        FREEZE_OVERLAP,
        
        /// <remarks/>
        FREEZE_FUTURE_FREEZE,
        
        /// <remarks/>
        BOOKINGS_IN_FREEZE_PERIOD,
        
        /// <remarks/>
        PARTICIPATION_ALREADY_CANCELLED,
        
        /// <remarks/>
        PARTICIPATION_CANCELLED,
        
        /// <remarks/>
        MINIMUM_AGE_EXCEPTION,
        
        /// <remarks/>
        TEMPLATE_NOT_DEFINED,
        
        /// <remarks/>
        INVALID_OTHER_PAYER_TYPE,
        
        /// <remarks/>
        DIFFERENT_COUNTRY_FOR_OTHER_PAYER,
        
        /// <remarks/>
        OTHER_PAYER_HAS_OTHER_PAYER,
        
        /// <remarks/>
        NO_VALID_ACCOUNT_FOR_OTHER_PAYER,
        
        /// <remarks/>
        PERSON_STATUS_NOT_VALID_FOR_ATTEND,
        
        /// <remarks/>
        ATTENDING_PERSON_BLACKLISTED,
        
        /// <remarks/>
        MISSING_PRIVILEGE_FOR_ATTEND,
        
        /// <remarks/>
        ATTEND_NOT_POSSIBLE_AT_SPECIFIED_TIME,
        
        /// <remarks/>
        CLIPCARD_NOT_USABLE,
        
        /// <remarks/>
        TOO_MANY_CLIPS_ON_CLIPCARD,
        
        /// <remarks/>
        NOT_ENOUGH_CLIPS_ON_CLIPCARD,
        
        /// <remarks/>
        LOGIN_BLOCKED,
        
        /// <remarks/>
        PASSWORD_EXPIRED,
        
        /// <remarks/>
        PERSON_DELETED,
        
        /// <remarks/>
        PERSON_ANONYMIZED,
        
        /// <remarks/>
        INVALID_PICTURE,
        
        /// <remarks/>
        PERSON_NOT_FOUND_FOR_VENDING,
        
        /// <remarks/>
        TOO_MANY_MATCHES,
        
        /// <remarks/>
        PASSWORD_NOT_SET,
        
        /// <remarks/>
        PASSWORD_TOO_SHORT,
        
        /// <remarks/>
        CANNOT_PARTICIPATE_IN_FREEZE_PERIOD,
        
        /// <remarks/>
        INVALID_STATUS,
        
        /// <remarks/>
        CONCURRENT_CALLS,
        
        /// <remarks/>
        CANNOT_UPDATE_COMPLETED_QUESTIONNAIRE,
        
        /// <remarks/>
        MISSING_ADMIN_FEE_PRODUCT,
        
        /// <remarks/>
        LOGIN_NOT_VALID,
        
        /// <remarks/>
        ACTIVE_TASKS_ALREADY_EXISTS_FOR_PERSON,
        
        /// <remarks/>
        TASK_TYPE_EXTERNAL_KEY_DOES_NOT_EXIST,
        
        /// <remarks/>
        SUBSCRIPTION_OF_SAME_TYPE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class validationResult {
        
        private validationProblem[] problemsField;
        
        private bool validField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("problems", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public validationProblem[] problems {
            get {
                return this.problemsField;
            }
            set {
                this.problemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class transferAnyPersonInfo {
        
        private person personField;
        
        private subscription[] subscriptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public person person {
            get {
                return this.personField;
            }
            set {
                this.personField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("subscriptions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public subscription[] subscriptions {
            get {
                return this.subscriptionsField;
            }
            set {
                this.subscriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class person {
        
        private address addressField;
        
        private string birthdayField;
        
        private string commentField;
        
        private string employeeNumberField;
        
        private string externalIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private bool maleField;
        
        private passport passportField;
        
        private compositeKey personIdField;
        
        private personType personTypeField;
        
        private bool personTypeFieldSpecified;
        
        private string salutationField;
        
        private string socialSecurityNumberField;
        
        private personStatus statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string employeeNumber {
            get {
                return this.employeeNumberField;
            }
            set {
                this.employeeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool male {
            get {
                return this.maleField;
            }
            set {
                this.maleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public passport passport {
            get {
                return this.passportField;
            }
            set {
                this.passportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personType personType {
            get {
                return this.personTypeField;
            }
            set {
                this.personTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool personTypeSpecified {
            get {
                return this.personTypeFieldSpecified;
            }
            set {
                this.personTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string salutation {
            get {
                return this.salutationField;
            }
            set {
                this.salutationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string socialSecurityNumber {
            get {
                return this.socialSecurityNumberField;
            }
            set {
                this.socialSecurityNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class address {
        
        private string address1Field;
        
        private string address2Field;
        
        private string address3Field;
        
        private string coNameField;
        
        private string countryField;
        
        private string countyField;
        
        private string zipField;
        
        private string zipNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string address3 {
            get {
                return this.address3Field;
            }
            set {
                this.address3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string coName {
            get {
                return this.coNameField;
            }
            set {
                this.coNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string zipName {
            get {
                return this.zipNameField;
            }
            set {
                this.zipNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class passport {
        
        private string numberField;
        
        private string issuanceCountryField;
        
        private string expirationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string issuanceCountry {
            get {
                return this.issuanceCountryField;
            }
            set {
                this.issuanceCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum personType {
        
        /// <remarks/>
        PRIVATE,
        
        /// <remarks/>
        STUDENT,
        
        /// <remarks/>
        STAFF,
        
        /// <remarks/>
        FRIEND,
        
        /// <remarks/>
        CORPORATE,
        
        /// <remarks/>
        ONEMANCORPORATE,
        
        /// <remarks/>
        FAMILY,
        
        /// <remarks/>
        SENIOR,
        
        /// <remarks/>
        GUEST,
        
        /// <remarks/>
        CHILD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum personStatus {
        
        /// <remarks/>
        LEAD,
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        INACTIVE,
        
        /// <remarks/>
        TEMPORARYINACTIVE,
        
        /// <remarks/>
        TRANSFERRED,
        
        /// <remarks/>
        DUPLICATE,
        
        /// <remarks/>
        PROSPECT,
        
        /// <remarks/>
        CONTACT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class subscription {
        
        private assignedAddOn[] assignedAddOnsField;
        
        private string billedUntilDateField;
        
        private string bindingEndDateField;
        
        private string endDateField;
        
        private int freeDaysField;
        
        private compositeKey personIdField;
        
        private string priceField;
        
        private subscriptionProduct productField;
        
        private string startDateField;
        
        private subscriptionState stateField;
        
        private bool stateFieldSpecified;
        
        private subscriptionSubState subStateField;
        
        private bool subStateFieldSpecified;
        
        private compositeKey subscriptionIdField;
        
        private int windowOfOpportunityField;
        
        private bool windowOfOpportunityFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("assignedAddOns", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public assignedAddOn[] assignedAddOns {
            get {
                return this.assignedAddOnsField;
            }
            set {
                this.assignedAddOnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string billedUntilDate {
            get {
                return this.billedUntilDateField;
            }
            set {
                this.billedUntilDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bindingEndDate {
            get {
                return this.bindingEndDateField;
            }
            set {
                this.bindingEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int freeDays {
            get {
                return this.freeDaysField;
            }
            set {
                this.freeDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public subscriptionProduct product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public subscriptionState state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public subscriptionSubState subState {
            get {
                return this.subStateField;
            }
            set {
                this.subStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subStateSpecified {
            get {
                return this.subStateFieldSpecified;
            }
            set {
                this.subStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey subscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int windowOfOpportunity {
            get {
                return this.windowOfOpportunityField;
            }
            set {
                this.windowOfOpportunityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool windowOfOpportunitySpecified {
            get {
                return this.windowOfOpportunityFieldSpecified;
            }
            set {
                this.windowOfOpportunityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class assignedAddOn {
        
        private string endDateField;
        
        private string initialPeriodEndDateField;
        
        private decimal initialPeriodPriceField;
        
        private bool initialPeriodPriceFieldSpecified;
        
        private string initialPeriodStartDateField;
        
        private int keyField;
        
        private string nameField;
        
        private string priceField;
        
        private int pricePeriodLengthField;
        
        private timeUnit pricePeriodUnitField;
        
        private bool pricePeriodUnitFieldSpecified;
        
        private string startDateField;
        
        private string startupCampaignEndDateField;
        
        private string startupCampaignPriceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initialPeriodEndDate {
            get {
                return this.initialPeriodEndDateField;
            }
            set {
                this.initialPeriodEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal initialPeriodPrice {
            get {
                return this.initialPeriodPriceField;
            }
            set {
                this.initialPeriodPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool initialPeriodPriceSpecified {
            get {
                return this.initialPeriodPriceFieldSpecified;
            }
            set {
                this.initialPeriodPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string initialPeriodStartDate {
            get {
                return this.initialPeriodStartDateField;
            }
            set {
                this.initialPeriodStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int pricePeriodLength {
            get {
                return this.pricePeriodLengthField;
            }
            set {
                this.pricePeriodLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public timeUnit pricePeriodUnit {
            get {
                return this.pricePeriodUnitField;
            }
            set {
                this.pricePeriodUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pricePeriodUnitSpecified {
            get {
                return this.pricePeriodUnitFieldSpecified;
            }
            set {
                this.pricePeriodUnitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startupCampaignEndDate {
            get {
                return this.startupCampaignEndDateField;
            }
            set {
                this.startupCampaignEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startupCampaignPrice {
            get {
                return this.startupCampaignPriceField;
            }
            set {
                this.startupCampaignPriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum timeUnit {
        
        /// <remarks/>
        WEEK,
        
        /// <remarks/>
        DAY,
        
        /// <remarks/>
        MONTH,
        
        /// <remarks/>
        YEAR,
        
        /// <remarks/>
        HOUR,
        
        /// <remarks/>
        MINUTE,
        
        /// <remarks/>
        SECOND,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class subscriptionProduct {
        
        private string globalIdField;
        
        private string nameField;
        
        private subscriptionType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string globalId {
            get {
                return this.globalIdField;
            }
            set {
                this.globalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public subscriptionType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum subscriptionType {
        
        /// <remarks/>
        CASH,
        
        /// <remarks/>
        EFT,
        
        /// <remarks/>
        PROSPECT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum subscriptionState {
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        ENDED,
        
        /// <remarks/>
        FROZEN,
        
        /// <remarks/>
        WINDOW,
        
        /// <remarks/>
        CREATED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum subscriptionSubState {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        AWAITING_ACTIVATION,
        
        /// <remarks/>
        UPGRADED,
        
        /// <remarks/>
        DOWNGRADED,
        
        /// <remarks/>
        EXTENDED,
        
        /// <remarks/>
        TRANSFERRED,
        
        /// <remarks/>
        REGRETTED,
        
        /// <remarks/>
        CANCELLED,
        
        /// <remarks/>
        BLOCKED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class transferSubscriptionInfo {
        
        private compositeKey productKeyField;
        
        private compositeKey subscriptionKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey productKey {
            get {
                return this.productKeyField;
            }
            set {
                this.productKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey subscriptionKey {
            get {
                return this.subscriptionKeyField;
            }
            set {
                this.subscriptionKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class transferAnyPersonParameters {
        
        private bool changeEndDateForCashSubscriptionsField;
        
        private bool changePriceForEFTSubscriptionsField;
        
        private compositeKey personIdField;
        
        private int toCenterIdField;
        
        private transferSubscriptionInfo[] transferSubscriptionsInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool changeEndDateForCashSubscriptions {
            get {
                return this.changeEndDateForCashSubscriptionsField;
            }
            set {
                this.changeEndDateForCashSubscriptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool changePriceForEFTSubscriptions {
            get {
                return this.changePriceForEFTSubscriptionsField;
            }
            set {
                this.changePriceForEFTSubscriptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int toCenterId {
            get {
                return this.toCenterIdField;
            }
            set {
                this.toCenterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transferSubscriptionsInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public transferSubscriptionInfo[] transferSubscriptionsInfo {
            get {
                return this.transferSubscriptionsInfoField;
            }
            set {
                this.transferSubscriptionsInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class overridePartnerBenefitActivationAuthorizationCodeParameters {
        
        private personKey personKeyField;
        
        private string activationAuthorizationCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personKey personKey {
            get {
                return this.personKeyField;
            }
            set {
                this.personKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string activationAuthorizationCode {
            get {
                return this.activationAuthorizationCodeField;
            }
            set {
                this.activationAuthorizationCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class scope {
        
        private scope[] childrenField;
        
        private string fullNameField;
        
        private int idField;
        
        private string nameField;
        
        private scopeType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("children", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public scope[] children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public scopeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum scopeType {
        
        /// <remarks/>
        Global,
        
        /// <remarks/>
        Tree,
        
        /// <remarks/>
        Area,
        
        /// <remarks/>
        Center,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class personTypeAndStatus {
        
        private bool blacklistedField;
        
        private compositeSubKey companyAgreementIdField;
        
        private string externalIdField;
        
        private string internalCommentField;
        
        private string messageToMemberField;
        
        private compositeKey personIdField;
        
        private personStatus personStatusField;
        
        private bool personStatusFieldSpecified;
        
        private personType personTypeField;
        
        private bool personTypeFieldSpecified;
        
        private bool suspendedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool blacklisted {
            get {
                return this.blacklistedField;
            }
            set {
                this.blacklistedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeSubKey companyAgreementId {
            get {
                return this.companyAgreementIdField;
            }
            set {
                this.companyAgreementIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string internalComment {
            get {
                return this.internalCommentField;
            }
            set {
                this.internalCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageToMember {
            get {
                return this.messageToMemberField;
            }
            set {
                this.messageToMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personStatus personStatus {
            get {
                return this.personStatusField;
            }
            set {
                this.personStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool personStatusSpecified {
            get {
                return this.personStatusFieldSpecified;
            }
            set {
                this.personStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personType personType {
            get {
                return this.personTypeField;
            }
            set {
                this.personTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool personTypeSpecified {
            get {
                return this.personTypeFieldSpecified;
            }
            set {
                this.personTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool suspended {
            get {
                return this.suspendedField;
            }
            set {
                this.suspendedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class compositeSubKey : compositeKey {
        
        private int subIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int subId {
            get {
                return this.subIdField;
            }
            set {
                this.subIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class personActivationDates {
        
        private string firstActiveStartDateField;
        
        private string lastActiveEndDateField;
        
        private string lastActiveStartDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstActiveStartDate {
            get {
                return this.firstActiveStartDateField;
            }
            set {
                this.firstActiveStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastActiveEndDate {
            get {
                return this.lastActiveEndDateField;
            }
            set {
                this.lastActiveEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastActiveStartDate {
            get {
                return this.lastActiveStartDateField;
            }
            set {
                this.lastActiveStartDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class memberCard {
        
        private string cardIdField;
        
        private accessCardType cardTypeField;
        
        private bool cardTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cardId {
            get {
                return this.cardIdField;
            }
            set {
                this.cardIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public accessCardType cardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cardTypeSpecified {
            get {
                return this.cardTypeFieldSpecified;
            }
            set {
                this.cardTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum accessCardType {
        
        /// <remarks/>
        BARCODE,
        
        /// <remarks/>
        MAGNETICCARD,
        
        /// <remarks/>
        RFCARD,
        
        /// <remarks/>
        PIN,
        
        /// <remarks/>
        ANTIDROWN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class friend {
        
        private string nameField;
        
        private compositeKey personKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personKey {
            get {
                return this.personKeyField;
            }
            set {
                this.personKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class privilegeSetAndSponsorship {
        
        private int privilegeSetField;
        
        private bool privilegeSetFieldSpecified;
        
        private decimal sponsorshipField;
        
        private bool sponsorshipFieldSpecified;
        
        private sponsorshipType sponsorshipTypeField;
        
        private bool sponsorshipTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int privilegeSet {
            get {
                return this.privilegeSetField;
            }
            set {
                this.privilegeSetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool privilegeSetSpecified {
            get {
                return this.privilegeSetFieldSpecified;
            }
            set {
                this.privilegeSetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal sponsorship {
            get {
                return this.sponsorshipField;
            }
            set {
                this.sponsorshipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sponsorshipSpecified {
            get {
                return this.sponsorshipFieldSpecified;
            }
            set {
                this.sponsorshipFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public sponsorshipType sponsorshipType {
            get {
                return this.sponsorshipTypeField;
            }
            set {
                this.sponsorshipTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sponsorshipTypeSpecified {
            get {
                return this.sponsorshipTypeFieldSpecified;
            }
            set {
                this.sponsorshipTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum sponsorshipType {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        FULL,
        
        /// <remarks/>
        FIXED,
        
        /// <remarks/>
        PERCENTAGE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class companyAgreement {
        
        private center[] availabilityCentersField;
        
        private compositeSubKey companyAgreementIdField;
        
        private compositeKey companyKeyField;
        
        private compositeKey contactPersonField;
        
        private bool documentationRequiredField;
        
        private bool documentationRequiredFieldSpecified;
        
        private bool employeeNumberRequiredField;
        
        private bool employeeNumberRequiredFieldSpecified;
        
        private string nameField;
        
        private privilegeSetAndSponsorship[] privilegeSetsField;
        
        private string refField;
        
        private companyAgreementStateType stateField;
        
        private bool stateFieldSpecified;
        
        private int validityField;
        
        private bool validityFieldSpecified;
        
        private timeUnit validityUnitField;
        
        private bool validityUnitFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("availabilityCenters", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public center[] availabilityCenters {
            get {
                return this.availabilityCentersField;
            }
            set {
                this.availabilityCentersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeSubKey companyAgreementId {
            get {
                return this.companyAgreementIdField;
            }
            set {
                this.companyAgreementIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey companyKey {
            get {
                return this.companyKeyField;
            }
            set {
                this.companyKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey contactPerson {
            get {
                return this.contactPersonField;
            }
            set {
                this.contactPersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool documentationRequired {
            get {
                return this.documentationRequiredField;
            }
            set {
                this.documentationRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentationRequiredSpecified {
            get {
                return this.documentationRequiredFieldSpecified;
            }
            set {
                this.documentationRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool employeeNumberRequired {
            get {
                return this.employeeNumberRequiredField;
            }
            set {
                this.employeeNumberRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool employeeNumberRequiredSpecified {
            get {
                return this.employeeNumberRequiredFieldSpecified;
            }
            set {
                this.employeeNumberRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("privilegeSets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public privilegeSetAndSponsorship[] privilegeSets {
            get {
                return this.privilegeSetsField;
            }
            set {
                this.privilegeSetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public companyAgreementStateType state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int validity {
            get {
                return this.validityField;
            }
            set {
                this.validityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validitySpecified {
            get {
                return this.validityFieldSpecified;
            }
            set {
                this.validityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public timeUnit validityUnit {
            get {
                return this.validityUnitField;
            }
            set {
                this.validityUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validityUnitSpecified {
            get {
                return this.validityUnitFieldSpecified;
            }
            set {
                this.validityUnitFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class center {
        
        private address addressField;
        
        private int centerIdField;
        
        private bool centerIdFieldSpecified;
        
        private string nameField;
        
        private string shortNameField;
        
        private string webNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int centerId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centerIdSpecified {
            get {
                return this.centerIdFieldSpecified;
            }
            set {
                this.centerIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webName {
            get {
                return this.webNameField;
            }
            set {
                this.webNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum companyAgreementStateType {
        
        /// <remarks/>
        UNDERTARGET,
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        STOPNEW,
        
        /// <remarks/>
        OLD,
        
        /// <remarks/>
        AWAITING_ACTIVATION,
        
        /// <remarks/>
        BLOCKED,
        
        /// <remarks/>
        DELETED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class personCompanyRelation {
        
        private companyAgreement agreementField;
        
        private string companyNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public companyAgreement agreement {
            get {
                return this.agreementField;
            }
            set {
                this.agreementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string companyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class personDetail {
        
        private bool allowFriendsToBookField;
        
        private personCompanyRelation companyRelationField;
        
        private extendedAttribute[] extendedAttributesField;
        
        private friend[] friendsField;
        
        private memberCard[] memberCardsField;
        
        private person personField;
        
        private personActivationDates personActiveDatesField;
        
        private personCommunication personCommunicationField;
        
        private personTypeAndStatus personTypeAndStatusField;
        
        private subscription[] subscriptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowFriendsToBook {
            get {
                return this.allowFriendsToBookField;
            }
            set {
                this.allowFriendsToBookField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personCompanyRelation companyRelation {
            get {
                return this.companyRelationField;
            }
            set {
                this.companyRelationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public extendedAttribute[] extendedAttributes {
            get {
                return this.extendedAttributesField;
            }
            set {
                this.extendedAttributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public friend[] friends {
            get {
                return this.friendsField;
            }
            set {
                this.friendsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public memberCard[] memberCards {
            get {
                return this.memberCardsField;
            }
            set {
                this.memberCardsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public person person {
            get {
                return this.personField;
            }
            set {
                this.personField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personActivationDates personActiveDates {
            get {
                return this.personActiveDatesField;
            }
            set {
                this.personActiveDatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personCommunication personCommunication {
            get {
                return this.personCommunicationField;
            }
            set {
                this.personCommunicationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personTypeAndStatus personTypeAndStatus {
            get {
                return this.personTypeAndStatusField;
            }
            set {
                this.personTypeAndStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public subscription[] subscriptions {
            get {
                return this.subscriptionsField;
            }
            set {
                this.subscriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class extendedAttribute {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class personCommunication {
        
        private bool allowChargedSMSField;
        
        private bool allowChargedSMSFieldSpecified;
        
        private bool allowEmailField;
        
        private bool allowEmailFieldSpecified;
        
        private bool allowLetterField;
        
        private bool allowLetterFieldSpecified;
        
        private bool allowPhoneField;
        
        private bool allowPhoneFieldSpecified;
        
        private bool allowSMSField;
        
        private bool allowSMSFieldSpecified;
        
        private string emailField;
        
        private string externalIdField;
        
        private string homePhoneNumberField;
        
        private string mobilePhoneNumberField;
        
        private compositeKey personIdField;
        
        private quickChannel quickChannelField;
        
        private bool quickChannelFieldSpecified;
        
        private bool wishToReceiveEmailNewsLettersField;
        
        private bool wishToReceiveEmailNewsLettersFieldSpecified;
        
        private bool wishToReceiveThirdPartyOffersField;
        
        private bool wishToReceiveThirdPartyOffersFieldSpecified;
        
        private string workPhoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowChargedSMS {
            get {
                return this.allowChargedSMSField;
            }
            set {
                this.allowChargedSMSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowChargedSMSSpecified {
            get {
                return this.allowChargedSMSFieldSpecified;
            }
            set {
                this.allowChargedSMSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowEmail {
            get {
                return this.allowEmailField;
            }
            set {
                this.allowEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowEmailSpecified {
            get {
                return this.allowEmailFieldSpecified;
            }
            set {
                this.allowEmailFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowLetter {
            get {
                return this.allowLetterField;
            }
            set {
                this.allowLetterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowLetterSpecified {
            get {
                return this.allowLetterFieldSpecified;
            }
            set {
                this.allowLetterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowPhone {
            get {
                return this.allowPhoneField;
            }
            set {
                this.allowPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowPhoneSpecified {
            get {
                return this.allowPhoneFieldSpecified;
            }
            set {
                this.allowPhoneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool allowSMS {
            get {
                return this.allowSMSField;
            }
            set {
                this.allowSMSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allowSMSSpecified {
            get {
                return this.allowSMSFieldSpecified;
            }
            set {
                this.allowSMSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string homePhoneNumber {
            get {
                return this.homePhoneNumberField;
            }
            set {
                this.homePhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobilePhoneNumber {
            get {
                return this.mobilePhoneNumberField;
            }
            set {
                this.mobilePhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public quickChannel quickChannel {
            get {
                return this.quickChannelField;
            }
            set {
                this.quickChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quickChannelSpecified {
            get {
                return this.quickChannelFieldSpecified;
            }
            set {
                this.quickChannelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool wishToReceiveEmailNewsLetters {
            get {
                return this.wishToReceiveEmailNewsLettersField;
            }
            set {
                this.wishToReceiveEmailNewsLettersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wishToReceiveEmailNewsLettersSpecified {
            get {
                return this.wishToReceiveEmailNewsLettersFieldSpecified;
            }
            set {
                this.wishToReceiveEmailNewsLettersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool wishToReceiveThirdPartyOffers {
            get {
                return this.wishToReceiveThirdPartyOffersField;
            }
            set {
                this.wishToReceiveThirdPartyOffersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wishToReceiveThirdPartyOffersSpecified {
            get {
                return this.wishToReceiveThirdPartyOffersFieldSpecified;
            }
            set {
                this.wishToReceiveThirdPartyOffersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string workPhoneNumber {
            get {
                return this.workPhoneNumberField;
            }
            set {
                this.workPhoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum quickChannel {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        EMAIL,
        
        /// <remarks/>
        SMS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class passportCountry {
        
        private string idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class journalNoteParameters {
        
        private string fromDateField;
        
        private int maxEntriesField;
        
        private bool maxEntriesFieldSpecified;
        
        private compositeKey personIdField;
        
        private string toDateField;
        
        private journalNoteType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxEntries {
            get {
                return this.maxEntriesField;
            }
            set {
                this.maxEntriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxEntriesSpecified {
            get {
                return this.maxEntriesFieldSpecified;
            }
            set {
                this.maxEntriesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string toDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public journalNoteType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum journalNoteType {
        
        /// <remarks/>
        SUBSCRIPTION_CONTRACT,
        
        /// <remarks/>
        PAYMENT_AGREEMENT_CONTRACT,
        
        /// <remarks/>
        NOTE,
        
        /// <remarks/>
        SYSTEM,
        
        /// <remarks/>
        DOCTOR_NOTE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class journalNoteDocument {
        
        private int journalNoteKeyField;
        
        private bool journalNoteKeyFieldSpecified;
        
        private mimeDocument mimeDocumentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int journalNoteKey {
            get {
                return this.journalNoteKeyField;
            }
            set {
                this.journalNoteKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool journalNoteKeySpecified {
            get {
                return this.journalNoteKeyFieldSpecified;
            }
            set {
                this.journalNoteKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mimeDocument mimeDocument {
            get {
                return this.mimeDocumentField;
            }
            set {
                this.mimeDocumentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class mimeDocument {
        
        private byte[] dataField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class centerEmployee {
        
        private string fullNameField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class coordinate {
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class centerDetail {
        
        private int centerIdField;
        
        private bool centerIdFieldSpecified;
        
        private string nameField;
        
        private string shortNameField;
        
        private string webNameField;
        
        private address addressField;
        
        private string organizationCodeField;
        
        private string externalIdField;
        
        private string emailField;
        
        private string phoneNumberField;
        
        private string faxNumberField;
        
        private string websiteURLField;
        
        private coordinate coordinateField;
        
        private string startupDateField;
        
        private centerEmployee generalManagerField;
        
        private centerEmployee assistantManagerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int centerId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centerIdSpecified {
            get {
                return this.centerIdFieldSpecified;
            }
            set {
                this.centerIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webName {
            get {
                return this.webNameField;
            }
            set {
                this.webNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string organizationCode {
            get {
                return this.organizationCodeField;
            }
            set {
                this.organizationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string faxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string websiteURL {
            get {
                return this.websiteURLField;
            }
            set {
                this.websiteURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public coordinate coordinate {
            get {
                return this.coordinateField;
            }
            set {
                this.coordinateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startupDate {
            get {
                return this.startupDateField;
            }
            set {
                this.startupDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centerEmployee generalManager {
            get {
                return this.generalManagerField;
            }
            set {
                this.generalManagerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centerEmployee assistantManager {
            get {
                return this.assistantManagerField;
            }
            set {
                this.assistantManagerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class findPerson {
        
        private extendedAttribute[] attributesField;
        
        private string birthdayField;
        
        private int centerField;
        
        private bool centerFieldSpecified;
        
        private string countryField;
        
        private string nameField;
        
        private personType personTypeField;
        
        private bool personTypeFieldSpecified;
        
        private string phoneNumberField;
        
        private string socialSecurityNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public extendedAttribute[] attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int center {
            get {
                return this.centerField;
            }
            set {
                this.centerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centerSpecified {
            get {
                return this.centerFieldSpecified;
            }
            set {
                this.centerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personType personType {
            get {
                return this.personTypeField;
            }
            set {
                this.personTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool personTypeSpecified {
            get {
                return this.personTypeFieldSpecified;
            }
            set {
                this.personTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string socialSecurityNumber {
            get {
                return this.socialSecurityNumberField;
            }
            set {
                this.socialSecurityNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class toDo {
        
        private compositeKey assignedPersonKeyField;
        
        private compositeKey createdByKeyField;
        
        private long creationTimeField;
        
        private string deadlineField;
        
        private person regardingPersonField;
        
        private string subjectField;
        
        private string toDoExternalIdField;
        
        private string toDoGroupNameField;
        
        private string toDoStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey assignedPersonKey {
            get {
                return this.assignedPersonKeyField;
            }
            set {
                this.assignedPersonKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey createdByKey {
            get {
                return this.createdByKeyField;
            }
            set {
                this.createdByKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deadline {
            get {
                return this.deadlineField;
            }
            set {
                this.deadlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public person regardingPerson {
            get {
                return this.regardingPersonField;
            }
            set {
                this.regardingPersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string toDoExternalId {
            get {
                return this.toDoExternalIdField;
            }
            set {
                this.toDoExternalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string toDoGroupName {
            get {
                return this.toDoGroupNameField;
            }
            set {
                this.toDoGroupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string toDoState {
            get {
                return this.toDoStateField;
            }
            set {
                this.toDoStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class createToDoParameter {
        
        private compositeKey assignedPersonKeyField;
        
        private int centerIdField;
        
        private string commentField;
        
        private string deadlineField;
        
        private compositeKey regardingPersonKeyField;
        
        private string subjectField;
        
        private string toDoGroupExternalIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey assignedPersonKey {
            get {
                return this.assignedPersonKeyField;
            }
            set {
                this.assignedPersonKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int centerId {
            get {
                return this.centerIdField;
            }
            set {
                this.centerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deadline {
            get {
                return this.deadlineField;
            }
            set {
                this.deadlineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey regardingPersonKey {
            get {
                return this.regardingPersonKeyField;
            }
            set {
                this.regardingPersonKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string toDoGroupExternalId {
            get {
                return this.toDoGroupExternalIdField;
            }
            set {
                this.toDoGroupExternalIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class fullPersonAndCommunicationDetails {
        
        private string passwordField;
        
        private person personField;
        
        private personCommunication personCommunicationField;
        
        private string pincodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public person person {
            get {
                return this.personField;
            }
            set {
                this.personField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personCommunication personCommunication {
            get {
                return this.personCommunicationField;
            }
            set {
                this.personCommunicationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pincode {
            get {
                return this.pincodeField;
            }
            set {
                this.pincodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class bankInfo {
        
        private string accountHolderField;
        
        private string accountNumberField;
        
        private string accountTypeField;
        
        private string bankNameField;
        
        private string bankRegNumberField;
        
        private string bicField;
        
        private string branchNumberField;
        
        private string controlDigitsField;
        
        private string extraInfoField;
        
        private string ibanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountHolder {
            get {
                return this.accountHolderField;
            }
            set {
                this.accountHolderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string accountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bankRegNumber {
            get {
                return this.bankRegNumberField;
            }
            set {
                this.bankRegNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bic {
            get {
                return this.bicField;
            }
            set {
                this.bicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string branchNumber {
            get {
                return this.branchNumberField;
            }
            set {
                this.branchNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string controlDigits {
            get {
                return this.controlDigitsField;
            }
            set {
                this.controlDigitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extraInfo {
            get {
                return this.extraInfoField;
            }
            set {
                this.extraInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string iban {
            get {
                return this.ibanField;
            }
            set {
                this.ibanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class createLeadParameters {
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string socialSecurityNumberField;
        
        private string homePhoneField;
        
        private string mobilePhoneField;
        
        private string emailField;
        
        private string birthdayField;
        
        private bool maleField;
        
        private bool maleFieldSpecified;
        
        private personType personTypeField;
        
        private bool personTypeFieldSpecified;
        
        private string commentField;
        
        private string employeeNumberField;
        
        private extendedAttribute[] extendedAttributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string socialSecurityNumber {
            get {
                return this.socialSecurityNumberField;
            }
            set {
                this.socialSecurityNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool male {
            get {
                return this.maleField;
            }
            set {
                this.maleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maleSpecified {
            get {
                return this.maleFieldSpecified;
            }
            set {
                this.maleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personType personType {
            get {
                return this.personTypeField;
            }
            set {
                this.personTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool personTypeSpecified {
            get {
                return this.personTypeFieldSpecified;
            }
            set {
                this.personTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string employeeNumber {
            get {
                return this.employeeNumberField;
            }
            set {
                this.employeeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public extendedAttribute[] extendedAttributes {
            get {
                return this.extendedAttributesField;
            }
            set {
                this.extendedAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class journalNote {
        
        private string creationDateField;
        
        private string creationTimeField;
        
        private string filenameField;
        
        private int keyField;
        
        private bool keyFieldSpecified;
        
        private mimeDocument mimeDocumentField;
        
        private string nameField;
        
        private compositeKey personKeyField;
        
        private string textField;
        
        private journalNoteType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool keySpecified {
            get {
                return this.keyFieldSpecified;
            }
            set {
                this.keyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mimeDocument mimeDocument {
            get {
                return this.mimeDocumentField;
            }
            set {
                this.mimeDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personKey {
            get {
                return this.personKeyField;
            }
            set {
                this.personKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public journalNoteType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class changeSuspensionStatusParameters {
        
        private string internalCommentField;
        
        private string messageToMemberField;
        
        private compositeKey personIdField;
        
        private personBlacklistedStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string internalComment {
            get {
                return this.internalCommentField;
            }
            set {
                this.internalCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageToMember {
            get {
                return this.messageToMemberField;
            }
            set {
                this.messageToMemberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personBlacklistedStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum personBlacklistedStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Blacklisted,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        Blocked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class changePersonTypeParameter {
        
        private compositeSubKey companyAgreementIdField;
        
        private string documentExpireDateField;
        
        private string employeeNumberField;
        
        private compositeKey personIdField;
        
        private personType personTypeField;
        
        private compositeKey relatedPersonIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeSubKey companyAgreementId {
            get {
                return this.companyAgreementIdField;
            }
            set {
                this.companyAgreementIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string documentExpireDate {
            get {
                return this.documentExpireDateField;
            }
            set {
                this.documentExpireDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string employeeNumber {
            get {
                return this.employeeNumberField;
            }
            set {
                this.employeeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey personId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personType personType {
            get {
                return this.personTypeField;
            }
            set {
                this.personTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public compositeKey relatedPersonId {
            get {
                return this.relatedPersonIdField;
            }
            set {
                this.relatedPersonIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum personPaymentType {
        
        /// <remarks/>
        INVOICE,
        
        /// <remarks/>
        EFT,
        
        /// <remarks/>
        CREDIT_CARD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void changePasswordWithTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void changePersonTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void changeSuspensionStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createDoctorNoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createJournalNoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createLeadCompletedEventHandler(object sender, createLeadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createLeadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createLeadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((person)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createPaymentAgreementCompletedEventHandler(object sender, createPaymentAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPaymentAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPaymentAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createPersonCompletedEventHandler(object sender, createPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((person)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createPersonWithCommunicationDetailsCompletedEventHandler(object sender, createPersonWithCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPersonWithCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPersonWithCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fullPersonAndCommunicationDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fullPersonAndCommunicationDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createPersonWithPasswordCompletedEventHandler(object sender, createPersonWithPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPersonWithPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPersonWithPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((person)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void createToDoCompletedEventHandler(object sender, createToDoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createToDoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createToDoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public toDo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((toDo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void deleteExtendedAttributeCompletedEventHandler(object sender, deleteExtendedAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteExtendedAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteExtendedAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void findPersonsCompletedEventHandler(object sender, findPersonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPersonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findPersonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public person[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((person[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getCentersCompletedEventHandler(object sender, getCentersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCentersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCentersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public center[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((center[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getCentersInAreaCompletedEventHandler(object sender, getCentersInAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCentersInAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCentersInAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public center[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((center[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getCitiesForZipcodeCompletedEventHandler(object sender, getCitiesForZipcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCitiesForZipcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCitiesForZipcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getCommunicationDetailsCompletedEventHandler(object sender, getCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public personCommunication Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((personCommunication)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getCurrentPersonIdCompletedEventHandler(object sender, getCurrentPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public compositeKey Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((compositeKey)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getDetailForCenterCompletedEventHandler(object sender, getDetailForCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDetailForCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDetailForCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public centerDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((centerDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getDetailForCentersCompletedEventHandler(object sender, getDetailForCentersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDetailForCentersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDetailForCentersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public centerDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((centerDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getDetailForCentersInAreaCompletedEventHandler(object sender, getDetailForCentersInAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDetailForCentersInAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDetailForCentersInAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public centerDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((centerDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getDetailsCompletedEventHandler(object sender, getDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((person)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getExtendedAttributeMIMECompletedEventHandler(object sender, getExtendedAttributeMIMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtendedAttributeMIMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtendedAttributeMIMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mimeDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mimeDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getExtendedAttributeTextCompletedEventHandler(object sender, getExtendedAttributeTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getExtendedAttributeTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getExtendedAttributeTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getJournalNoteDocumentCompletedEventHandler(object sender, getJournalNoteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJournalNoteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJournalNoteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public journalNoteDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((journalNoteDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getJournalNotesCompletedEventHandler(object sender, getJournalNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJournalNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJournalNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public journalNote[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((journalNote[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getPassportCountriesCompletedEventHandler(object sender, getPassportCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPassportCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPassportCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public passportCountry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((passportCountry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getPersonDetailCompletedEventHandler(object sender, getPersonDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public personDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((personDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getPersonDetailByLoginCompletedEventHandler(object sender, getPersonDetailByLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonDetailByLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonDetailByLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public personDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((personDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getScopeCompletedEventHandler(object sender, getScopeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getScopeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getScopeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public scope Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((scope)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void getTypeAndStatusCompletedEventHandler(object sender, getTypeAndStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTypeAndStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTypeAndStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public personTypeAndStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((personTypeAndStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void overridePartnerBenefitActivationAuthorizationCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void removePersonReferrerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void sendPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void sendPasswordTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void setPersonReferrerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void transferAnyPersonCompletedEventHandler(object sender, transferAnyPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transferAnyPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transferAnyPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public transferAnyPersonInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transferAnyPersonInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void transferPersonCompletedEventHandler(object sender, transferPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transferPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transferPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public personKey Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((personKey)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void updateCommunicationDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void updateDetailsCompletedEventHandler(object sender, updateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((person)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void updateExtendedAttributeMIMECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void updateExtendedAttributeTextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void validateBankInfoCompletedEventHandler(object sender, validateBankInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateBankInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateBankInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bankInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bankInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void validatePersonCompletedEventHandler(object sender, validatePersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validatePersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validatePersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public validationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((validationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void validatePhoneNumberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
