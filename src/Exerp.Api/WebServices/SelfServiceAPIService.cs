//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace Exerp.Api.WebServices.SelfServiceAPI {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SelfServiceAPIBinding", Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class SelfServiceAPIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback findPersonByAccessCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback findPersonByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPincodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePincodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateEmployeePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback validatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback validatePincodeOperationCompleted;
        
        /// <remarks/>
        public SelfServiceAPIService() {
            this.Url = "https://puregym-test.exerp.com/api-v4/SelfServiceAPI";
        }
        
        /// <remarks/>
        public event findPersonByAccessCardCompletedEventHandler findPersonByAccessCardCompleted;
        
        /// <remarks/>
        public event findPersonByEmailCompletedEventHandler findPersonByEmailCompleted;
        
        /// <remarks/>
        public event setPasswordCompletedEventHandler setPasswordCompleted;
        
        /// <remarks/>
        public event setPincodeCompletedEventHandler setPincodeCompleted;
        
        /// <remarks/>
        public event updatePasswordCompletedEventHandler updatePasswordCompleted;
        
        /// <remarks/>
        public event updatePincodeCompletedEventHandler updatePincodeCompleted;
        
        /// <remarks/>
        public event validateEmployeePasswordCompletedEventHandler validateEmployeePasswordCompleted;
        
        /// <remarks/>
        public event validatePasswordCompletedEventHandler validatePasswordCompleted;
        
        /// <remarks/>
        public event validatePincodeCompletedEventHandler validatePincodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public compositeKey findPersonByAccessCard(string arg0, accessCardType arg1) {
            object[] results = this.Invoke("findPersonByAccessCard", new object[] {
                        arg0,
                        arg1});
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindPersonByAccessCard(string arg0, accessCardType arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findPersonByAccessCard", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public compositeKey EndfindPersonByAccessCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public void findPersonByAccessCardAsync(string arg0, accessCardType arg1) {
            this.findPersonByAccessCardAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void findPersonByAccessCardAsync(string arg0, accessCardType arg1, object userState) {
            if ((this.findPersonByAccessCardOperationCompleted == null)) {
                this.findPersonByAccessCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPersonByAccessCardOperationCompleted);
            }
            this.InvokeAsync("findPersonByAccessCard", new object[] {
                        arg0,
                        arg1}, this.findPersonByAccessCardOperationCompleted, userState);
        }
        
        private void OnfindPersonByAccessCardOperationCompleted(object arg) {
            if ((this.findPersonByAccessCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPersonByAccessCardCompleted(this, new findPersonByAccessCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public compositeKey findPersonByEmail(string arg0) {
            object[] results = this.Invoke("findPersonByEmail", new object[] {
                        arg0});
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindPersonByEmail(string arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findPersonByEmail", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public compositeKey EndfindPersonByEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public void findPersonByEmailAsync(string arg0) {
            this.findPersonByEmailAsync(arg0, null);
        }
        
        /// <remarks/>
        public void findPersonByEmailAsync(string arg0, object userState) {
            if ((this.findPersonByEmailOperationCompleted == null)) {
                this.findPersonByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPersonByEmailOperationCompleted);
            }
            this.InvokeAsync("findPersonByEmail", new object[] {
                        arg0}, this.findPersonByEmailOperationCompleted, userState);
        }
        
        private void OnfindPersonByEmailOperationCompleted(object arg) {
            if ((this.findPersonByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPersonByEmailCompleted(this, new findPersonByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool setPassword(compositeKey arg0, string arg1, string arg2) {
            object[] results = this.Invoke("setPassword", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetPassword(compositeKey arg0, string arg1, string arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setPassword", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsetPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setPasswordAsync(compositeKey arg0, string arg1, string arg2) {
            this.setPasswordAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setPasswordAsync(compositeKey arg0, string arg1, string arg2, object userState) {
            if ((this.setPasswordOperationCompleted == null)) {
                this.setPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPasswordOperationCompleted);
            }
            this.InvokeAsync("setPassword", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setPasswordOperationCompleted, userState);
        }
        
        private void OnsetPasswordOperationCompleted(object arg) {
            if ((this.setPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPasswordCompleted(this, new setPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void setPincode(compositeKey arg0, string arg1, string arg2) {
            this.Invoke("setPincode", new object[] {
                        arg0,
                        arg1,
                        arg2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsetPincode(compositeKey arg0, string arg1, string arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("setPincode", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndsetPincode(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void setPincodeAsync(compositeKey arg0, string arg1, string arg2) {
            this.setPincodeAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void setPincodeAsync(compositeKey arg0, string arg1, string arg2, object userState) {
            if ((this.setPincodeOperationCompleted == null)) {
                this.setPincodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPincodeOperationCompleted);
            }
            this.InvokeAsync("setPincode", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.setPincodeOperationCompleted, userState);
        }
        
        private void OnsetPincodeOperationCompleted(object arg) {
            if ((this.setPincodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPincodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool updatePassword(compositeKey arg0, string arg1, string arg2) {
            object[] results = this.Invoke("updatePassword", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdatePassword(compositeKey arg0, string arg1, string arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updatePassword", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndupdatePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePasswordAsync(compositeKey arg0, string arg1, string arg2) {
            this.updatePasswordAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updatePasswordAsync(compositeKey arg0, string arg1, string arg2, object userState) {
            if ((this.updatePasswordOperationCompleted == null)) {
                this.updatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePasswordOperationCompleted);
            }
            this.InvokeAsync("updatePassword", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updatePasswordOperationCompleted, userState);
        }
        
        private void OnupdatePasswordOperationCompleted(object arg) {
            if ((this.updatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePasswordCompleted(this, new updatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool updatePincode(compositeKey arg0, string arg1, string arg2) {
            object[] results = this.Invoke("updatePincode", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdatePincode(compositeKey arg0, string arg1, string arg2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updatePincode", new object[] {
                        arg0,
                        arg1,
                        arg2}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndupdatePincode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePincodeAsync(compositeKey arg0, string arg1, string arg2) {
            this.updatePincodeAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void updatePincodeAsync(compositeKey arg0, string arg1, string arg2, object userState) {
            if ((this.updatePincodeOperationCompleted == null)) {
                this.updatePincodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePincodeOperationCompleted);
            }
            this.InvokeAsync("updatePincode", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.updatePincodeOperationCompleted, userState);
        }
        
        private void OnupdatePincodeOperationCompleted(object arg) {
            if ((this.updatePincodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePincodeCompleted(this, new updatePincodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public compositeKey validateEmployeePassword(string arg0, string arg1) {
            object[] results = this.Invoke("validateEmployeePassword", new object[] {
                        arg0,
                        arg1});
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidateEmployeePassword(string arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validateEmployeePassword", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public compositeKey EndvalidateEmployeePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((compositeKey)(results[0]));
        }
        
        /// <remarks/>
        public void validateEmployeePasswordAsync(string arg0, string arg1) {
            this.validateEmployeePasswordAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void validateEmployeePasswordAsync(string arg0, string arg1, object userState) {
            if ((this.validateEmployeePasswordOperationCompleted == null)) {
                this.validateEmployeePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateEmployeePasswordOperationCompleted);
            }
            this.InvokeAsync("validateEmployeePassword", new object[] {
                        arg0,
                        arg1}, this.validateEmployeePasswordOperationCompleted, userState);
        }
        
        private void OnvalidateEmployeePasswordOperationCompleted(object arg) {
            if ((this.validateEmployeePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateEmployeePasswordCompleted(this, new validateEmployeePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool validatePassword(compositeKey arg0, string arg1) {
            object[] results = this.Invoke("validatePassword", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidatePassword(compositeKey arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validatePassword", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndvalidatePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validatePasswordAsync(compositeKey arg0, string arg1) {
            this.validatePasswordAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void validatePasswordAsync(compositeKey arg0, string arg1, object userState) {
            if ((this.validatePasswordOperationCompleted == null)) {
                this.validatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidatePasswordOperationCompleted);
            }
            this.InvokeAsync("validatePassword", new object[] {
                        arg0,
                        arg1}, this.validatePasswordOperationCompleted, userState);
        }
        
        private void OnvalidatePasswordOperationCompleted(object arg) {
            if ((this.validatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validatePasswordCompleted(this, new validatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://v4.api.eclub.procard.dk/", ResponseNamespace="http://v4.api.eclub.procard.dk/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool validatePincode(compositeKey arg0, string arg1) {
            object[] results = this.Invoke("validatePincode", new object[] {
                        arg0,
                        arg1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvalidatePincode(compositeKey arg0, string arg1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("validatePincode", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndvalidatePincode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validatePincodeAsync(compositeKey arg0, string arg1) {
            this.validatePincodeAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void validatePincodeAsync(compositeKey arg0, string arg1, object userState) {
            if ((this.validatePincodeOperationCompleted == null)) {
                this.validatePincodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidatePincodeOperationCompleted);
            }
            this.InvokeAsync("validatePincode", new object[] {
                        arg0,
                        arg1}, this.validatePincodeOperationCompleted, userState);
        }
        
        private void OnvalidatePincodeOperationCompleted(object arg) {
            if ((this.validatePincodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validatePincodeCompleted(this, new validatePincodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public enum accessCardType {
        
        /// <remarks/>
        BARCODE,
        
        /// <remarks/>
        MAGNETICCARD,
        
        /// <remarks/>
        RFCARD,
        
        /// <remarks/>
        PIN,
        
        /// <remarks/>
        ANTIDROWN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://v4.api.eclub.procard.dk/")]
    public partial class compositeKey {
        
        private int centerField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int center {
            get {
                return this.centerField;
            }
            set {
                this.centerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void findPersonByAccessCardCompletedEventHandler(object sender, findPersonByAccessCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPersonByAccessCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findPersonByAccessCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public compositeKey Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((compositeKey)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void findPersonByEmailCompletedEventHandler(object sender, findPersonByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPersonByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findPersonByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public compositeKey Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((compositeKey)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void setPasswordCompletedEventHandler(object sender, setPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void setPincodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void updatePasswordCompletedEventHandler(object sender, updatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void updatePincodeCompletedEventHandler(object sender, updatePincodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePincodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePincodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void validateEmployeePasswordCompletedEventHandler(object sender, validateEmployeePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateEmployeePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateEmployeePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public compositeKey Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((compositeKey)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void validatePasswordCompletedEventHandler(object sender, validatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void validatePincodeCompletedEventHandler(object sender, validatePincodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validatePincodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validatePincodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
