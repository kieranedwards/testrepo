using System;
using FluentMigrator;

namespace PureRide.Data.Migration
{

    [Migration(20150729)]
    public class CreateInitialTables : FluentMigrator.Migration
    {
        
        public override void Up()
        {
            Create.Table("prBasket").WithDescription("Baskets placed, only complete if record is in BasketPayment with status Ok")
                .WithColumn("BasketId").AsInt32().PrimaryKey().Identity().WithColumnDescription("Human Readable Code Unique Basket Id")
                .WithColumn("BasketRef").AsGuid().NotNullable().Unique().WithColumnDescription("Generated by Code Unique Basket Reference, stored in the user cookie")
                .WithColumn("PersonEntityId").AsInt32().NotNullable().WithColumnDescription("Exerp Person Id, Unique when combined with centre Id")
                .WithColumn("PersonCentreId").AsInt32().NotNullable().WithColumnDescription("Exerp Centre Id, Unique when combined with person Id")
                .WithColumn("CampaignCode").AsString(25).Nullable().WithColumnDescription("Exerp Voucher Code Used to reduce SalePrice")
                .WithColumn("DateCreated").AsDateTime().NotNullable().WithDefaultValue(SystemMethods.CurrentDateTime)
                .WithColumn("DateUpdated").AsDateTime().NotNullable().WithDefaultValue(SystemMethods.CurrentDateTime);

            //Column Sizes defined by SagePay Documention
            Create.Table("prBasketPayment").WithDescription("SagePay responses for Baskets")
                .WithColumn("BasketPaymentId").AsInt32().PrimaryKey().Identity().WithColumnDescription("Unique Id")
                .WithColumn("BasketId").AsInt32().NotNullable().ForeignKey("prBasket", "BasketId").WithColumnDescription("FK to the original Basket")
                .WithColumn("VPSTxId").AsString(38).Nullable().Unique().WithColumnDescription("The Sage Pay ID to uniquely identify the transaction on our system. Present if Status is OK or OK REPEATED from SagePay")
                .WithColumn("TxAuthNo").AsInt64().Nullable().WithColumnDescription("Sage Pay unique Authorisation Code for a successfully authorised transaction. Shown to the user")
                .WithColumn("StatusCode").AsString(15).Nullable().WithColumnDescription("Short Sage Pay status")
                .WithColumn("StatusDetail").AsString(255).Nullable().WithColumnDescription("Human-readable text providing extra detail for the Status message")
                .WithColumn("RawResponse").AsString(Int32.MaxValue).Nullable().WithColumnDescription("Full details of what is sent back")
                .WithColumn("DateCreated").AsDateTime().NotNullable().WithDefaultValue(SystemMethods.CurrentDateTime)
                .WithColumn("DateUpdated").AsDateTime().NotNullable().WithDefaultValue(SystemMethods.CurrentDateTime);

            Create.Table("prBasketLine").WithDescription("Products to be purchased")
             .WithColumn("BasketLineId").AsInt32().NotNullable().PrimaryKey().Identity().WithColumnDescription("Unique Basketline Id")
             .WithColumn("BasketId").AsInt32().NotNullable().ForeignKey("prBasket", "BasketId").WithColumnDescription("FK to the original Basket")
             .WithColumn("ProductEntityId").AsInt32().NotNullable().WithColumnDescription("Exerp Product Id, Unique when combined with centre Id")
             .WithColumn("ProductCentreId").AsInt32().NotNullable().WithColumnDescription("Exerp Product Id, Unique when combined with centre Id")
             .WithColumn("ProductDescription").AsString(500).NotNullable().WithColumnDescription("Exerp Product Description")
             .WithColumn("SalePrice").AsDecimal(19, 2).NotNullable().WithColumnDescription("Price to be Paid at checkout")
             .WithColumn("DateCreated").AsDateTime().NotNullable().WithDefaultValue(SystemMethods.CurrentDateTime)
             .WithColumn("DateUpdated").AsDateTime().NotNullable().WithDefaultValue(SystemMethods.CurrentDateTime);

            Execute.EmbeddedScript("Basket_CreateWithItem-20150729.sql");
            Execute.EmbeddedScript("Basket_GetWithItemByBasketRef-20150729.sql");
            Execute.EmbeddedScript("BasketPayment_CreateWithTransactionId-20150729.sql");
            Execute.EmbeddedScript("BasketPayment_UpdateWithResponse-20150729.sql"); 
            
        }

        public override void Down()
        {
            Execute.Sql("DROP PROCEDURE Basket_CreateWithItem");
            Execute.Sql("DROP PROCEDURE Basket_GetWithItemByBasketRef");
            Execute.Sql("DROP PROCEDURE BasketPayment_CreateWithTransactionId");
            Execute.Sql("DROP PROCEDURE BasketPayment_UpdateWithResponse");
            
            Delete.Table("BasketPayment");
            Delete.Table("BasketLine");
            Delete.Table("Basket");
        }
    }

}
