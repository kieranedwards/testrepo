@using PureRide.Web.Controllers.Account
@model PureRide.Web.ViewModels.Account.UpdateDetailsModel
@{this.RetrieveModel();}

@using (Html.BeginUmbracoForm<UpdateDetailsController>("FormSubmit"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationMessageFor(m => m.FirstName)
    @Html.LabelFor(m => Model.FirstName)
    <input type="text" required name="FirstName" id="FirstName" autocomplete="given-name" value="@Model.FirstName" maxlength="@Exerp.Api.Constants.MaxLengthName" />

    @Html.ValidationMessageFor(m => m.LastName)
    @Html.LabelFor(m => Model.LastName)
    <input type="text" required name="LastName" id="LastName" autocomplete="family-name" value="@Model.LastName" maxlength="@Exerp.Api.Constants.MaxLengthName" />

    @Html.ValidationMessageFor(m => m.Email)
    @Html.LabelFor(m => Model.Email)
    <input type="email" required name="email" id="email" autocomplete="email" value="@Model.Email" maxlength="@Exerp.Api.Constants.MaxLengthEmail" />

    @Html.ValidationMessageFor(m => m.MobilePhoneNumber)
    @Html.LabelFor(m => Model.MobilePhoneNumber)
    <input type="tel" required name="MobilePhoneNumber" id="MobilePhoneNumber" autocomplete="tel" title="Please enter a valid uk mobile phone number." pattern="(07|\+44\s?7)\d{9}" value="@Model.MobilePhoneNumber" />

    <input type="radio" name="IsMale" value="true" @(Model.IsMale ? "checked=checked" : "") /> <label>Male</label>
    <input type="radio" name="IsMale" value="false" @(!Model.IsMale ? "checked=checked" : "") />    <label>Female</label>

    @Html.ValidationMessageFor(m => m.DayOfBirth)
    @Html.LabelFor(m => Model.DayOfBirth)
    <select name="DayOfBirth" required>
        <option value=""></option>
        @for (int day = 1; day <= 31; day++)
        {
            <option @(Model.DayOfBirth == day ? "selected" : "") value="@day">@day</option>
        }
    </select>

    <select name="MonthOfBirth" required>
        <option value=""></option>
        @for (int month = 1; month <= 12; month++)
        {
            <option @(Model.MonthOfBirth == month ? "selected" : "") value="@month">@month</option>
        }
    </select>

    <select name="YearOfBirth" required>
        <option value=""></option>
        @for (var year = DateTime.Now.Year - 18; year > 1900; year--)
        {
            <option @(Model.YearOfBirth == year ? "selected" : "") value="@year">@year</option>
        }
    </select>

    @Html.ValidationMessageFor(m => m.ShoeSize)
    @Html.LabelFor(m => Model.ShoeSize)
    @Html.DropDownListFor(m => m.ShoeSize, Model.ShoeSizeOptions(), new { required = "required" })

    <input class="btn btn--primary" type="submit" value="Update"/><a href="/account/" class="btn btn--secondary">Back</a>
}